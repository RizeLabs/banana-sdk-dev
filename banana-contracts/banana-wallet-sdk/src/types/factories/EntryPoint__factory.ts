/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { EntryPoint, EntryPointInterface } from "../EntryPoint";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "preOpGas",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paid",
        type: "uint256",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "bool",
        name: "targetSuccess",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "targetResult",
        type: "bytes",
      },
    ],
    name: "ExecutionResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "opIndex",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "FailedOp",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "SenderAddressResult",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureValidationFailed",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResult",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sigFailed",
            type: "bool",
          },
          {
            internalType: "uint48",
            name: "validAfter",
            type: "uint48",
          },
          {
            internalType: "uint48",
            name: "validUntil",
            type: "uint48",
          },
          {
            internalType: "bytes",
            name: "paymasterContext",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.ReturnInfo",
        name: "returnInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "senderInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "factoryInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "unstakeDelaySec",
            type: "uint256",
          },
        ],
        internalType: "struct IStakeManager.StakeInfo",
        name: "paymasterInfo",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "stake",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "unstakeDelaySec",
                type: "uint256",
              },
            ],
            internalType: "struct IStakeManager.StakeInfo",
            name: "stakeInfo",
            type: "tuple",
          },
        ],
        internalType: "struct IEntryPoint.AggregatorStakeInfo",
        name: "aggregatorInfo",
        type: "tuple",
      },
    ],
    name: "ValidationResultWithAggregation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
    ],
    name: "AccountDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalDeposit",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "SignatureAggregatorChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "unstakeDelaySec",
        type: "uint256",
      },
    ],
    name: "StakeLocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    name: "StakeUnlocked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymaster",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actualGasUsed",
        type: "uint256",
      },
    ],
    name: "UserOperationEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "revertReason",
        type: "bytes",
      },
    ],
    name: "UserOperationRevertReason",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "withdrawAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "SIG_VALIDATION_FAILED",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "_validateSenderAndPaymaster",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "deposits",
    outputs: [
      {
        internalType: "uint112",
        name: "deposit",
        type: "uint112",
      },
      {
        internalType: "bool",
        name: "staked",
        type: "bool",
      },
      {
        internalType: "uint112",
        name: "stake",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
      {
        internalType: "uint48",
        name: "withdrawTime",
        type: "uint48",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint112",
            name: "deposit",
            type: "uint112",
          },
          {
            internalType: "bool",
            name: "staked",
            type: "bool",
          },
          {
            internalType: "uint112",
            name: "stake",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "unstakeDelaySec",
            type: "uint32",
          },
          {
            internalType: "uint48",
            name: "withdrawTime",
            type: "uint48",
          },
        ],
        internalType: "struct IStakeManager.DepositInfo",
        name: "info",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "initCode",
        type: "bytes",
      },
    ],
    name: "getSenderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "getUserOpHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "initCode",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "callData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "paymasterAndData",
                type: "bytes",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct UserOperation[]",
            name: "userOps",
            type: "tuple[]",
          },
          {
            internalType: "contract IAggregator",
            name: "aggregator",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
        name: "opsPerAggregator",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleAggregatedOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation[]",
        name: "ops",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "handleOps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "callGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "verificationGasLimit",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "preVerificationGas",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
            ],
            internalType: "struct EntryPoint.MemoryUserOp",
            name: "mUserOp",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "userOpHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "prefund",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "contextOffset",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preOpGas",
            type: "uint256",
          },
        ],
        internalType: "struct EntryPoint.UserOpInfo",
        name: "opInfo",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    name: "innerHandleOp",
    outputs: [
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "op",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "targetCallData",
        type: "bytes",
      },
    ],
    name: "simulateHandleOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
    ],
    name: "simulateValidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a08060405234620000845761022c8181016001600160401b038111838210176200006e57829162004781833903906000f0801562000062576080526040516146f790816200008a82396080518181816111120152818161320d01526135590152f35b6040513d6000823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe60806040526004361015610023575b361561001957600080fd5b610021613fca565b005b60003560e01c80630396cb60146101775780631d7327561461016e5780631fad948c14610165578063205c28781461015c5780634b1d7cf5146101535780635287ce121461014a57806370a08231146101415780638f41ec5a14610138578063957122ab1461012f5780639b249f6914610126578063a61935311461011d578063b760faf914610114578063bb9fe6bf1461010b578063c23a5cea14610102578063d6383f94146100f9578063ee219423146100f05763fc7e286d0361000e576100eb611900565b61000e565b506100eb6116e8565b506100eb611580565b506100eb6113e9565b506100eb611269565b506100eb61122a565b506100eb611209565b506100eb61106a565b506100eb610e97565b506100eb610e5c565b506100eb610dd7565b506100eb610c87565b506100eb610954565b506100eb6107b3565b506100eb610718565b506100eb6105d0565b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5760043563ffffffff811680820361031d576103187fa5ae833d0bb1dcd632d98a8b70973e8516812898e19bf27b70071ebc8dc52c01916102356102053373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9161021181151561410f565b61022e610225600185015463ffffffff1690565b63ffffffff1690565b1115614174565b54926102fa6dffffffffffffffffffffffffffff946102b861025c34888460781c16611eb3565b966102688815156141d9565b6102748189111561423e565b61029881610280610409565b941684906dffffffffffffffffffffffffffff169052565b6001602084015287166dffffffffffffffffffffffffffff166040830152565b63ffffffff83166060820152600060808201526102f53373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b6142a3565b6040805194855263ffffffff90911660208501523393918291820190565b0390a2005b600080fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761036e57604052565b610376610322565b604052565b610100810190811067ffffffffffffffff82111761036e57604052565b67ffffffffffffffff811161036e57604052565b6060810190811067ffffffffffffffff82111761036e57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761036e57604052565b6040519061041682610352565b565b6040519060c0820182811067ffffffffffffffff82111761036e57604052565b604051906040820182811067ffffffffffffffff82111761036e57604052565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111610494575b01160190565b61049c610322565b61048e565b73ffffffffffffffffffffffffffffffffffffffff81160361031d57565b60243590610416826104a1565b60c43590610416826104a1565b3590610416826104a1565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc0190610180821261031d5760405161051c81610352565b61010081931261031d576040516105328161037b565b61053a6104bf565b815260443560208201526064356040820152608435606082015260a43560808201526105646104cc565b60a082015260e43560c08201526101043560e08201528152610124356020820152610144356040820152610164356060820152608061018435910152565b9181601f8401121561031d5782359167ffffffffffffffff831161031d576020838186019501011161031d57565b503461031d576101c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5760043567ffffffffffffffff80821161031d573660238301121561031d57816004013561062d81610458565b9261063b60405194856103c8565b818452366024838301011161031d57816000926024602093018387013784010152610665366104e4565b6101a43591821161031d5761069c9261068561068c9336906004016105a2565b505061253e565b6040519081529081906020820190565b0390f35b9060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc83011261031d5760043567ffffffffffffffff9283821161031d578060238301121561031d57816004013593841161031d5760248460051b8301011161031d576024019190602435610715816104a1565b90565b503461031d57610727366106a0565b610732829392611a60565b60005b848110610784575060009283915b858310610754576100218585611b9d565b90919360019061077a610768878987611b1f565b6107728886611afd565b519088612025565b0194019190610743565b806107a8610796600193859795611afd565b516107a2838987611b1f565b83612e84565b505001929092610735565b503461031d576040807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d57600435906107f1826104a1565b60243591600092338452836020528284206dffffffffffffffffffffffffffff8154168083116108f7576108f4938361088188959461084861083588978897611e9c565b6dffffffffffffffffffffffffffff1690565b6dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b865173ffffffffffffffffffffffffffffffffffffffff831681526020810182905233907fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb90604090a273ffffffffffffffffffffffffffffffffffffffff875192165af16108ee611b6d565b5061461b565b51f35b606485517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f576974686472617720616d6f756e7420746f6f206c61726765000000000000006044820152fd5b503461031d57610963366106a0565b6000805b838210610b29576109789150611a60565b6000805b848110610a8f57505060008093815b8181106109c457610021868660007f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d81604051a2611b9d565b610a2a6109d282848a612158565b6109fd6109e46109e4602084016121fa565b73ffffffffffffffffffffffffffffffffffffffff1690565b7f575ff3acadd5ab348fe1855e217e0f3678f8d767d7494c9f9fefbee2e17cca4d6000604051a2806121a6565b906000915b808310610a4757505050610a429061212a565b61098b565b90919497610a82610a7c610a8892610a768c8b610a6f82610a698e8b8d611b1f565b92611afd565b5191612025565b90611eb3565b9961212a565b9561212a565b9190610a2f565b610a9a818688612158565b6020610ab2610aa983806121a6565b929093016121fa565b9173ffffffffffffffffffffffffffffffffffffffff60009316905b828410610ae75750505050610ae29061212a565b61097c565b90919294610a8281610b1c85610b15610b03610b21968d611afd565b51610b0f8c8b8a611b1f565b85612e84565b908b612adc565b61212a565b929190610ace565b610b34828587612158565b90610b3f82806121a6565b92610b4f6109e4602083016121fa565b9173ffffffffffffffffffffffffffffffffffffffff8316610b746001821415612204565b610b95575b505050610b8f91610b8991611eb3565b9161212a565b90610967565b909592610bae6040999693999895989788810190611c92565b92908a3b1561031d5789938b918a5193849283927fe3563a4f00000000000000000000000000000000000000000000000000000000845260049e8f850193610bf59461239e565b03815a93600094fa9081610c6e575b50610c585786517f86a9f75000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a16818a0190815281906020010390fd5b0390fd5b9497509295509093509181610b89610b8f610b79565b80610c7b610c8192610398565b80610e51565b38610c04565b503461031d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5761069c73ffffffffffffffffffffffffffffffffffffffff600435610cdb816104a1565b608060409283928351610ced81610352565b600093818580935282602082015282878201528260608201520152168152806020522090610d7c65ffffffffffff6001835194610d2986610352565b80546dffffffffffffffffffffffffffff8082168852607082901c60ff161515602089015260789190911c1685870152015463ffffffff8116606086015260201c16608084019065ffffffffffff169052565b5191829182919091608065ffffffffffff8160a08401956dffffffffffffffffffffffffffff808251168652602082015115156020870152604082015116604086015263ffffffff6060820151166060860152015116910152565b503461031d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5773ffffffffffffffffffffffffffffffffffffffff600435610e28816104a1565b16600052600060205260206dffffffffffffffffffffffffffff60406000205416604051908152f35b600091031261031d57565b503461031d5760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d57602060405160018152f35b503461031d5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d57600467ffffffffffffffff813581811161031d57610ee890369084016105a2565b905060243591610ef7836104a1565b60443590811161031d57610f0e90369085016105a2565b929091159081611060575b50610ff9576014821015610f69575b610c54836040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160409060208152600060208201520190565b610f79610f8592610f7f92612734565b90612742565b60601c90565b3b15610f92573880610f28565b610c54906040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160609060208152601b60208201527f41413330207061796d6173746572206e6f74206465706c6f796564000000000060408201520190565b610c54836040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352820160609060208152601960208201527f41413230206163636f756e74206e6f74206465706c6f7965640000000000000060408201520190565b90503b1538610f19565b503461031d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5760043567ffffffffffffffff811161031d576110bc60249136906004016105a2565b906110f26040519283927f570e1a36000000000000000000000000000000000000000000000000000000008452600484016128d8565b0360208273ffffffffffffffffffffffffffffffffffffffff92816000857f0000000000000000000000000000000000000000000000000000000000000000165af19182156111a4575b600092611174575b50604051917f6ca7b806000000000000000000000000000000000000000000000000000000008352166004820152fd5b61119691925060203d811161119d575b61118e81836103c8565b8101906128c3565b9038611144565b503d611184565b6111ac611e5f565b61113c565b908161016091031261031d5790565b60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261031d576004359067ffffffffffffffff821161031d57610715916004016111b1565b503461031d57602061122261121d366111c0565b61266a565b604051908152f35b5060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d57610021600435611264816104a1565b613fcf565b503461031d576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126113e6573381528060205260408120600181019063ffffffff825416908115611388576113236112e861134b936112da6112d5855460ff9060701c1690565b614407565b65ffffffffffff421661446c565b84547fffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff16602082901b69ffffffffffff000000001617909455565b7fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff8154169055565b60405165ffffffffffff91909116815233907ffa9b3c14cc825c412c9ed81b3ba365a5b459439403f18829e572ed53a4180f0a90602090a2604051f35b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6e6f74207374616b6564000000000000000000000000000000000000000000006044820152fd5b80fd5b503461031d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d576100216000808060043561142c816104a1565b6114563373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b61150d61147861083583546dffffffffffffffffffffffffffff9060781c1690565b91611484831515614487565b6114e5600182016114bd65ffffffffffff6114a9835465ffffffffffff9060201c1690565b166114b58115156144ec565b421015614551565b80547fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000169055565b7fffffff0000000000000000000000000000ffffffffffffffffffffffffffffff8154169055565b6040805173ffffffffffffffffffffffffffffffffffffffff841681526020810183905233917fb7c918e0e249f999e965cafeb6c664271b3f4317d296461500e71da39f0cbda391a273ffffffffffffffffffffffffffffffffffffffff60405192165af161157a611b6d565b506145b6565b503461031d5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5767ffffffffffffffff60043581811161031d576115d19036906004016111b1565b602435916115de836104a1565b60443590811161031d576115f9610c549136906004016105a2565b6116016119dd565b61160a856129d7565b61161d6116178287612d56565b90613ec3565b9461162d82600092438452611ecb565b96438252819360609573ffffffffffffffffffffffffffffffffffffffff83166116b4575b5050505060800151936116816040611673602084015165ffffffffffff1690565b92015165ffffffffffff1690565b906040519687967f8b7ac9800000000000000000000000000000000000000000000000000000000088526004880161246e565b839550839496506116ce6040949293945180948193612460565b03925af19060806116dd611b6d565b929190388080611652565b503461031d576116f7366111c0565b6116ff6119dd565b611708826129d7565b6117128183612d56565b825160a0015191939161173f9073ffffffffffffffffffffffffffffffffffffffff16613f75565b613f75565b9061176361173a855173ffffffffffffffffffffffffffffffffffffffff90511690565b9461176c6126fc565b5061179b61177f60409586810190611c92565b906000601483106118f85750610f7961173a92610f7f92612734565b916117a591613ec3565b805173ffffffffffffffffffffffffffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff8216600181149160808801519787810151918860208201516117fa9065ffffffffffff1690565b91015165ffffffffffff16916060015192611813610418565b9a8b5260208b0152841515898b015265ffffffffffff1660608a015265ffffffffffff16608089015260a0880152151590816118ef575b506118845750610c5492519485947fe0cff05f00000000000000000000000000000000000000000000000000000000865260048601612869565b9190610c549361189384613f75565b6118ba61189e610438565b73ffffffffffffffffffffffffffffffffffffffff9096168652565b6020850152519586957ffaecb4e4000000000000000000000000000000000000000000000000000000008752600487016127d7565b9050153861184a565b915050613f75565b503461031d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261031d5773ffffffffffffffffffffffffffffffffffffffff600435611951816104a1565b16600052600060205260a0604060002065ffffffffffff60018254920154604051926dffffffffffffffffffffffffffff90818116855260ff8160701c161515602086015260781c16604084015263ffffffff8116606084015260201c166080820152f35b60209067ffffffffffffffff81116119d0575b60051b0190565b6119d8610322565b6119c9565b604051906119ea82610352565b604051608083610100830167ffffffffffffffff811184821017611a53575b60405260009283815283602082015283604082015283606082015283838201528360a08201528360c08201528360e082015281528260208201528260408201528260608201520152565b611a5b610322565b611a09565b90611a6a826119b6565b611a7760405191826103c8565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611aa582946119b6565b019060005b828110611ab657505050565b602090611ac16119dd565b82828501015201611aaa565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6020918151811015611b12575b60051b010190565b611b1a611acd565b611b0a565b9190811015611b60575b60051b810135907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea18136030182121561031d570190565b611b68611acd565b611b29565b3d15611b98573d90611b7e82610458565b91611b8c60405193846103c8565b82523d6000602084013e565b606090565b73ffffffffffffffffffffffffffffffffffffffff168015611c345760008092918192604051915af1611bce611b6d565b5015611bd657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f41413931206661696c65642073656e6420746f2062656e6566696369617279006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4141393020696e76616c69642062656e656669636961727900000000000000006044820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561031d570180359067ffffffffffffffff821161031d5760200191813603831361031d57565b9081602091031261031d575190565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b918091926000905b828210611d51575011611d4a575050565b6000910152565b91508060209183015181860152018291611d39565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093611da281518092818752878088019101611d31565b0116010190565b90611dc360809161071596946101c0808652850191611cf2565b9360e0815173ffffffffffffffffffffffffffffffffffffffff80825116602087015260208201516040870152604082015160608701526060820151858701528482015160a087015260a08201511660c086015260c081015182860152015161010084015260208101516101208401526040810151610140840152606081015161016084015201516101808201526101a0818403910152611d66565b506040513d6000823e3d90fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818110611ea7570390565b611eaf611e6c565b0390565b81198111611ebf570190565b611ec7611e6c565b0190565b60009291806020611f215a94611eea6060850151916060810190611c92565b92909160405195869485947f1d73275600000000000000000000000000000000000000000000000000000000865260048601611da9565b03816000305af160009181611ff5575b50611fef575060206000803e7fdeaddead0000000000000000000000000000000000000000000000000000000060005114611f82576080611f76611f7f935a90611e9c565b91015190611eb3565b50565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610c54600482016080906000815260406020820152600f60408201527f41413935206f7574206f6620676173000000000000000000000000000000000060608201520190565b93505050565b61201791925060203d811161201e575b61200f81836103c8565b810190611ce3565b9038611f31565b503d612005565b9291906000938260206120465a94611eea6060850151916060810190611c92565b03816000305af16000918161210a575b50612103575060206000803e7fdeaddead000000000000000000000000000000000000000000000000000000006000511461209d5750906080611f76611f7f935a90611e9c565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152600f60448201527f41413935206f7574206f662067617300000000000000000000000000000000006064820152608490fd5b9450505050565b61212391925060203d811161201e5761200f81836103c8565b9038612056565b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611ebf570190565b9190811015612199575b60051b810135907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa18136030182121561031d570190565b6121a1611acd565b612162565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18136030182121561031d570180359067ffffffffffffffff821161031d57602001918160051b3603831361031d57565b35610715816104a1565b1561220b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4141393620696e76616c69642061676772656761746f720000000000000000006044820152fd5b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561031d57016020813591019167ffffffffffffffff821161031d57813603831361031d57565b610715916122e4816122ca846104d9565b73ffffffffffffffffffffffffffffffffffffffff169052565b6020820135602082015261237f6123306123156123046040860186612269565b610160806040880152860191611cf2565b6123226060860186612269565b908583036060870152611cf2565b6080840135608084015260a084013560a084015260c084013560c084015260e084013560e0840152610100808501359084015261012061237281860186612269565b9185840390860152611cf2565b916123906101409182810190612269565b929091818503910152611cf2565b949391929083604087016040885252606086019360608160051b8801019482600090815b8483106123e15750505050505084602061071595968503910152611cf2565b9091929394977fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08b820301855288357ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffea18436030181121561245c576001918461244a92016122b9565b986020908101969501930191906123c2565b8280fd5b908092918237016000815290565b92909361071596959260c0958552602085015265ffffffffffff8092166040850152166060830152151560808201528160a08201520190611d66565b156124b157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4141393220696e7465726e616c2063616c6c206f6e6c790000000000000000006044820152fd5b90604061071592600081528160208201520190611d66565b604090610715939281528160208201520190611d66565b6125493033146124aa565b8151906040820151905a611388606085015184010111612640578051612573575b50505050600090565b6125a29161259e91612599855173ffffffffffffffffffffffffffffffffffffffff1690565b614680565b1590565b6125ae575b808061256a565b6125b6614692565b9182516125c4575b506125a7565b73ffffffffffffffffffffffffffffffffffffffff60207f1c4fada7374c0a9ee8841fc38afe82932dc0f8e69012e927f061a8bae611a201920151926126356020612623835173ffffffffffffffffffffffffffffffffffffffff1690565b92015195604051938493169683612527565b0390a33880806125be565b7fdeaddead0000000000000000000000000000000000000000000000000000000060005260206000fd5b80612679610140820182611c92565b50037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081016040519182016040528082526020820192833751902060405160208101918252306040820152466060820152606081526080810181811067ffffffffffffffff8211176126ef575b60405251902090565b6126f7610322565b6126e6565b604051906040820182811067ffffffffffffffff821117612727575b60405260006020838281520152565b61272f610322565b612718565b9060141161031d5790601490565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000903581811693926014811061277757505050565b60140360031b82901b16169150565b9060c060a061071593805184526020810151602085015260408101511515604085015265ffffffffffff80606083015116606086015260808201511660808501520151918160a08201520190611d66565b929461283861041695612826610100959998612814612800602097610140808c528b0190612786565b9b878a019060208091805184520151910152565b80516060890152602001516080880152565b805160a08701526020015160c0860152565b73ffffffffffffffffffffffffffffffffffffffff81511660e0850152015191019060208091805184520151910152565b6128b2610416946128a061288b60a0959998969960e0865260e0860190612786565b98602085019060208091805184520151910152565b80516060840152602001516080830152565b019060208091805184520151910152565b9081602091031261031d5751610715816104a1565b916020610715938181520191611cf2565b9061291873ffffffffffffffffffffffffffffffffffffffff9161071597959694606085526060850191611cf2565b941660208201526040818503910152611cf2565b60009060033d1161293957565b905060046000803e60005160e01c90565b600060443d10610715576040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc91823d016004833e815167ffffffffffffffff918282113d6024840111176129c6578184019485519384116129ce573d850101602084870101116129c65750610715929101602001906103c8565b949350505050565b50949350505050565b6129e46040820182611c92565b6129fc6129f0846121fa565b93610120810190611c92565b9290303b1561031d57600093612a409160405196879586957f957122ab000000000000000000000000000000000000000000000000000000008752600487016128e9565b0381305afa9081612ac9575b50610416576001612a5b61292c565b6308c379a014612a74575b612a6c57565b610416611e5f565b612a7c61294a565b80612a88575b50612a66565b80516000925015612a8257610c54906040519182917f220266b60000000000000000000000000000000000000000000000000000000083526004830161250f565b80610c7b612ad692610398565b38612a4c565b929190612ae890612cfa565b909273ffffffffffffffffffffffffffffffffffffffff80809516911603612c8c57612c1e57612b1790612cfa565b9116612bb057612b245750565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152602160448201527f41413332207061796d61737465722065787069726564206f72206e6f7420647560648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a490fd5b610c54826040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601460408201527f41413334207369676e6174757265206572726f7200000000000000000000000060608201520190565b610c54836040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601760408201527f414132322065787069726564206f72206e6f742064756500000000000000000060608201520190565b610c54846040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601460408201527f41413234207369676e6174757265206572726f7200000000000000000000000060608201520190565b8015612d4d57612d0990613e68565b73ffffffffffffffffffffffffffffffffffffffff65ffffffffffff806040840151164211908115612d3d575b5091511691565b9050602083015116421038612d36565b50600090600090565b916000915a93815190612d698282613014565b612d728161266a565b6020840152612d80826130d6565b612d8a8483613121565b9790612d9543600052565b73ffffffffffffffffffffffffffffffffffffffff612dcd60a0606097015173ffffffffffffffffffffffffffffffffffffffff1690565b16612e6a575b505a810360a084013510612dfd5760809360c092604087015260608601525a900391013501910152565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610c54600482016080906000815260406020820152601e60408201527f41413430206f76657220766572696669636174696f6e4761734c696d6974000060608201520190565b90935081612e7b9297508584613918565b95909238612dd3565b9290916000925a8251612e978184613014565b612ea08361266a565b6020850152612eae816130d6565b612eb985858a6134ad565b9890612ec443600052565b73ffffffffffffffffffffffffffffffffffffffff612efc60a0606096015173ffffffffffffffffffffffffffffffffffffffff1690565b16612f94575b505a840360a086013510612f2e5750604085015260608401526080919060c0905a900391013501910152565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601e60448201527f41413430206f76657220766572696669636174696f6e4761734c696d697400006064820152608490fd5b90925081612fa6929850868685613bdd565b96909138612f02565b15612fb657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4141393320696e76616c6964207061796d6173746572416e64446174610000006044820152fd5b6130869061303e613024826121fa565b73ffffffffffffffffffffffffffffffffffffffff168452565b602081013560208401526080810135604084015260a0810135606084015260c0810135608084015260e081013560c084015261010081013560e0840152610120810190611c92565b9081156130cb576130b0610f7f610f798460a0946130ab601461041699981015612faf565b612734565b73ffffffffffffffffffffffffffffffffffffffff16910152565b505060a06000910152565b60a081015173ffffffffffffffffffffffffffffffffffffffff16156131185760c060035b60ff60408401519116606084015102016080830151019101510290565b60c060016130fb565b906000915a91805173ffffffffffffffffffffffffffffffffffffffff91828251169361315360409182810190611c92565b90816131c1575b5050505060a0015173ffffffffffffffffffffffffffffffffffffffff165b61318243600052565b1615613190575b505a900391565b6131ba9073ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b5038613189565b863b613448576060845101516020845180927f570e1a36000000000000000000000000000000000000000000000000000000008252816000816132088989600484016128d8565b03928c7f00000000000000000000000000000000000000000000000000000000000000001690f190811561343b575b60009161341d575b5086811680156133b8578803613353573b156132ee57927fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d613179959361328f610f7f610f798b9660a099612734565b602084015193518701516132e39073ffffffffffffffffffffffffffffffffffffffff165b925173ffffffffffffffffffffffffffffffffffffffff92831681529190921660208201529081906040820190565b0390a391388061315a565b82517f220266b60000000000000000000000000000000000000000000000000000000081526000600482015260406024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b83517f220266b60000000000000000000000000000000000000000000000000000000081526000600482015260406024820152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152608490fd5b84517f220266b60000000000000000000000000000000000000000000000000000000081526000600482015260406024820152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152608490fd5b613435915060203d811161119d5761118e81836103c8565b3861323f565b613443611e5f565b613237565b82517f220266b60000000000000000000000000000000000000000000000000000000081526000600482015260406024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b600092915a9280519073ffffffffffffffffffffffffffffffffffffffff9283835116946134e060409283810190611c92565b918261350d575b505050505060a061317991015173ffffffffffffffffffffffffffffffffffffffff1690565b873b61376c576060855101516020855180927f570e1a36000000000000000000000000000000000000000000000000000000008252816000816135548a8a600484016128d8565b03928d7f00000000000000000000000000000000000000000000000000000000000000001690f190811561375f575b600091613741575b5087811680156136dc578903613677573b156136115750927fd51a9c61267aa6196961883ecf5ff2da6619c37dac0fa92122513fb32c032d2d61317995936135dc610f7f610f798b9660a099612734565b602084015193518701516136059073ffffffffffffffffffffffffffffffffffffffff166132b4565b0390a3913880806134e7565b83517f220266b6000000000000000000000000000000000000000000000000000000008152600481019190915260406024820152602060448201527f4141313520696e6974436f6465206d757374206372656174652073656e6465726064820152608490fd5b84517f220266b60000000000000000000000000000000000000000000000000000000081526004810183905260406024820152602060448201527f4141313420696e6974436f6465206d7573742072657475726e2073656e6465726064820152608490fd5b85517f220266b60000000000000000000000000000000000000000000000000000000081526004810184905260406024820152601b60448201527f4141313320696e6974436f6465206661696c6564206f72204f4f4700000000006064820152608490fd5b613759915060203d811161119d5761118e81836103c8565b3861358b565b613767611e5f565b613583565b83517f220266b6000000000000000000000000000000000000000000000000000000008152600481019190915260406024820152601f60448201527f414131302073656e64657220616c726561647920636f6e7374727563746564006064820152608490fd5b156137d957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4141343120746f6f206c6974746c6520766572696669636174696f6e476173006044820152fd5b919060408382031261031d57825167ffffffffffffffff811161031d5783019080601f8301121561031d5781519161386e83610458565b9161387c60405193846103c8565b8383526020848301011161031d5760209261389c91848085019101611d31565b92015190565b6138ba604092959493956060835260608301906122b9565b9460208201520152565b90610416602f60405180947f414133332072657665727465643a20000000000000000000000000000000000060208301526139088151809260208686019101611d31565b810103600f8101855201836103c8565b93919260609460009460009380519261395760a08a8601519561393c8888116137d2565b015173ffffffffffffffffffffffffffffffffffffffff1690565b916139828373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9461399e61083587546dffffffffffffffffffffffffffff1690565b96858810613b705773ffffffffffffffffffffffffffffffffffffffff60208a9894613a148a966dffffffffffffffffffffffffffff8b613a4d9e03166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b015194604051998a98899788937ff465c77e000000000000000000000000000000000000000000000000000000008552600485016138a2565b0395169103f1908183918493613b4a575b50613b43575050600190613a7061292c565b6308c379a014613aef575b50613a8257565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610c54600482016080906000815260406020820152601660408201527f4141333320726576657274656420286f72204f4f47290000000000000000000060608201520190565b613af761294a565b9081613b035750613a7b565b610c5491613b1191506138c4565b6040519182917f220266b60000000000000000000000000000000000000000000000000000000083526004830161250f565b9450925050565b909250613b6991503d8085833e613b6181836103c8565b810190613837565b9138613a5e565b6040517f220266b600000000000000000000000000000000000000000000000000000000815280610c54600482016080906000815260406020820152601e60408201527f41413331207061796d6173746572206465706f73697420746f6f206c6f77000060608201520190565b919492939093606095600095600093825190613c0460a08b8401519361393c8486116137d2565b93613c2f8573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b613c4a61083582546dffffffffffffffffffffffffffff1690565b878110613ddb579273ffffffffffffffffffffffffffffffffffffffff60208a98969394613a148a966dffffffffffffffffffffffffffff8d613cc49e9c9a03166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b0395169103f1908183918493613dbd575b50613db5575050600190613ce761292c565b6308c379a014613d60575b50613cfa5750565b604080517f220266b600000000000000000000000000000000000000000000000000000000815260048101929092526024820152601660448201527f4141333320726576657274656420286f72204f4f4729000000000000000000006064820152608490fd5b613d6861294a565b9081613d745750613cf2565b613d7f9250506138c4565b90610c546040519283927f220266b600000000000000000000000000000000000000000000000000000000845260048401612527565b955093505050565b909250613dd491503d8085833e613b6181836103c8565b9138613cd5565b610c548a6040519182917f220266b600000000000000000000000000000000000000000000000000000000835260048301608091815260406020820152601e60408201527f41413331207061796d6173746572206465706f73697420746f6f206c6f77000060608201520190565b60405190613e56826103ac565b60006040838281528260208201520152565b613e70613e49565b5065ffffffffffff808260a01c168015613ebc575b60405192613e92846103ac565b73ffffffffffffffffffffffffffffffffffffffff8116845260d01c602084015216604082015290565b5080613e85565b613ed8613ede91613ed2613e49565b50613e68565b91613e68565b9073ffffffffffffffffffffffffffffffffffffffff9182825116928315613f6a575b65ffffffffffff928391826040816020850151169301511693836040816020840151169201511690808410613f62575b50808511613f5a575b5060405195613f48876103ac565b16855216602084015216604082015290565b935038613f3a565b925038613f31565b815181169350613f01565b9073ffffffffffffffffffffffffffffffffffffffff613f936126fc565b9216600052600060205263ffffffff600160406000206dffffffffffffffffffffffffffff815460781c1685520154166020830152565b610416335b73ffffffffffffffffffffffffffffffffffffffff81169081600052600060205260406000206dffffffffffffffffffffffffffff6140113482845416611eb3565b918183116140b1577f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4936140806140a69284602096166dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b5416604051908152a2565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6465706f736974206f766572666c6f77000000000000000000000000000000006044820152fd5b1561411657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f6d757374207370656369667920756e7374616b652064656c61790000000000006044820152fd5b1561417b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f63616e6e6f7420646563726561736520756e7374616b652074696d65000000006044820152fd5b156141e057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f207374616b652073706563696669656400000000000000000000000000006044820152fd5b1561424557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f7374616b65206f766572666c6f770000000000000000000000000000000000006044820152fd5b9065ffffffffffff60806001610416946143036dffffffffffffffffffffffffffff86511682906dffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffff0000000000000000000000000000825416179055565b602085015115156eff000000000000000000000000000082549160701b16807fffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffff83161783557fffffff000000000000000000000000000000ffffffffffffffffffffffffffff7cffffffffffffffffffffffffffff000000000000000000000000000000604089015160781b16921617178155019263ffffffff6060820151167fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000008554161784550151167fffffffffffffffffffffffffffffffffffffffffffff000000000000ffffffff69ffffffffffff0000000083549260201b169116179055565b1561440e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f616c726561647920756e7374616b696e670000000000000000000000000000006044820152fd5b9065ffffffffffff8080931691168092038111611ebf570190565b1561448e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4e6f207374616b6520746f2077697468647261770000000000000000000000006044820152fd5b156144f357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6d7573742063616c6c20756e6c6f636b5374616b6528292066697273740000006044820152fd5b1561455857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f5374616b65207769746864726177616c206973206e6f742064756500000000006044820152fd5b156145bd57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6661696c656420746f207769746864726177207374616b6500000000000000006044820152fd5b1561462257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6661696c656420746f20776974686472617700000000000000000000000000006044820152fd5b9060009283809360208451940192f190565b3d6108008082116146b9575b50604051906020818301016040528082526000602083013e90565b90503861469e56fea2646970667358221220e248a75c5273b4c8f3db72b1d016acf6da829a794dbbbed5930b27f213978b8d64736f6c634300080f00336080806040523461001657610210908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c63570e1a361461002857600080fd5b346100c95760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100c95760043567ffffffffffffffff918282116100c957366023830112156100c95781600401359283116100c95736602484840101116100c9576100c561009e84602485016100fc565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390f35b80fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90806014116101bb5767ffffffffffffffff917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec82018381116101cd575b604051937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f81600b8701160116850190858210908211176101c0575b604052808452602084019036848401116101bb576020946000600c819682946014880187378301015251923560601c5af19060005191156101b557565b60009150565b600080fd5b6101c86100cc565b610178565b6101d56100cc565b61013a56fea264697066735822122068d4796dda7cf8f9be558c618ab1d1bdb6ae38483e0847122ad465faad779a3864736f6c634300080f0033";

type EntryPointConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EntryPointConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EntryPoint__factory extends ContractFactory {
  constructor(...args: EntryPointConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EntryPoint> {
    return super.deploy(overrides || {}) as Promise<EntryPoint>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EntryPoint {
    return super.attach(address) as EntryPoint;
  }
  override connect(signer: Signer): EntryPoint__factory {
    return super.connect(signer) as EntryPoint__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EntryPointInterface {
    return new utils.Interface(_abi) as EntryPointInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EntryPoint {
    return new Contract(address, _abi, signerOrProvider) as EntryPoint;
  }
}
