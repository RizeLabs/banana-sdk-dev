/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BananaRelayer, BananaRelayerInterface } from "../BananaRelayer";

const _abi = [
  {
    inputs: [],
    name: "checker",
    outputs: [
      {
        internalType: "bool",
        name: "canExec",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execPayload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256[2]",
        name: "_newQValues",
        type: "uint256[2]",
      },
      {
        internalType: "bytes32",
        name: "_message",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "initiateRecovery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastScheduledCallTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "scheduledCalls",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_message",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "stopRecoveryByRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761073f908161001c8239f35b600080fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816354a1e0851461046b57816384730e961461039157816396ac024d14610356578163a1ff6bfb14610117575063cf5303cf1461005a57600080fd5b3461011357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610113576100906105e8565b9282519384921515835260209084828501528051809585015282915b8583106100fa575050837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092606095601f93116100ee575b5001168101030190f35b858286010152386100e4565b81830181015187840160600152869450918201916100ac565b5080fd5b9050346103525760e07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103525761015061052f565b366043121561034e5782519083820182811067ffffffffffffffff82111761032057845260648236821161027e576024905b8282106103105750506084359160ff831680930361030b57865480610282575073ffffffffffffffffffffffffffffffffffffffff9042885542885260016020526101cf81888a20610595565b1692833b1561027e5785517fd21bd70a00000000000000000000000000000000000000000000000000000000815287959094939291869186015b60028310610264575050508385809482948460c49535604486015284015260a4356084840152833560a48401525af180156102575761024757505051f35b61025090610552565b6101135751f35b50505051903d90823e3d90fd5b815181528997506001929092019160209182019101610209565b8680fd5b8042106102df579061025873ffffffffffffffffffffffffffffffffffffffff92420311156000146102c8578754885260016020526102c381888a20610595565b6101cf565b42885542885260016020526102c381888a20610595565b6024886011887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b600080fd5b8135815260209182019101610182565b6041847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b8380fd5b8280fd5b50503461011357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261011357602091549051908152f35b839150346101135760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610113576103cb61052f565b6044359060ff821680920361034e5773ffffffffffffffffffffffffffffffffffffffff1691823b1561034e57906084849283875195869485937ff0d1c7210000000000000000000000000000000000000000000000000000000085526024359085015260248401526064356044840152833560648401525af180156104615761045457509051f35b61045d90610552565b9051f35b83513d84823e3d90fd5b8284346104e557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104e5576024359235815260016020528181209081548410156104e557506104d660209373ffffffffffffffffffffffffffffffffffffffff926104e8565b92905490519260031b1c168152f35b80fd5b80548210156105005760005260206000200190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361030b57565b67ffffffffffffffff811161056657604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b805468010000000000000000811015610566576105b7916001820181556104e8565b819291549060031b9173ffffffffffffffffffffffffffffffffffffffff9283811b93849216901b16911916179055565b600090428252600160205260409182812054156106b957428152600160205282812080541561068c5781528251927f39e3941f000000000000000000000000000000000000000000000000000000006020850152600484528084019184831067ffffffffffffffff84111761065f57505260019190565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526041600452fd5b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b9182815191602083019083821067ffffffffffffffff8311176106dc5752815290565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fdfea26469706673582212201f21dfb15bc3dbb36df9de16f528c571e873a194f1b07d2c587a20bbbf8a4cee64736f6c634300080f0033";

type BananaRelayerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BananaRelayerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BananaRelayer__factory extends ContractFactory {
  constructor(...args: BananaRelayerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BananaRelayer> {
    return super.deploy(overrides || {}) as Promise<BananaRelayer>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BananaRelayer {
    return super.attach(address) as BananaRelayer;
  }
  override connect(signer: Signer): BananaRelayer__factory {
    return super.connect(signer) as BananaRelayer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BananaRelayerInterface {
    return new utils.Interface(_abi) as BananaRelayerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BananaRelayer {
    return new Contract(address, _abi, signerOrProvider) as BananaRelayer;
  }
}
