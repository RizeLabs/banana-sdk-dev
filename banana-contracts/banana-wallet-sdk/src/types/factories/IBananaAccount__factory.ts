/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IBananaAccount,
  IBananaAccountInterface,
} from "../IBananaAccount";

const _abi = [
  {
    inputs: [],
    name: "finaliseRecovery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_newQValues",
        type: "uint256[2]",
      },
      {
        internalType: "bytes32",
        name: "_message",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "initiateRecovery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRecoveryAddress",
        type: "address",
      },
    ],
    name: "setupRecovery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_message",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "_v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "_r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "stopRecoveryByRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IBananaAccount__factory {
  static readonly abi = _abi;
  static createInterface(): IBananaAccountInterface {
    return new utils.Interface(_abi) as IBananaAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBananaAccount {
    return new Contract(address, _abi, signerOrProvider) as IBananaAccount;
  }
}
