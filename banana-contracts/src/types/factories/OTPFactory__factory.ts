/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { OTPFactory, OTPFactoryInterface } from "../OTPFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
    ],
    name: "ContractCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "merkleRoot",
        type: "uint256",
      },
    ],
    name: "createOTP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610dd3908161001c8239f35b600080fdfe60806040818152600436101561001457600080fd5b600091823560e01c63424309231461002b57600080fd5b346101ef57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101ef576004359073ffffffffffffffffffffffffffffffffffffffff918281168091036101eb57610baa908183019183831067ffffffffffffffff8411176101be5791839186936101f484398152602435602082015203019084f09081156101b257835468010000000000000000811015610185576001810180865581101561015857916020917fcf78cf0d6f3d8371e1075c69c492ab4ec5d8cf23a1a239b6a51a1d00be7ca312938680527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56301911690817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790558351908152a151f35b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b505051903d90823e3d90fd5b6024877f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b8480fd5b8280fdfe60c0346100a057601f610baa38819003918201601f19168301916001600160401b038311848410176100a55780849260409485528339810103126100a0578051906001600160a01b03821682036100a057602001519060008055600060015560805260a052604051610aee90816100bc8239608051818181610178015281816104b001526105bb015260a0518181816099015281816101bb01526105fe0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6040608081526004908136101561001557600080fd5b600091823560e01c90816315eacf131461051157816332e43a11146104d4578163663ea2e214610465578163bf98a6e41461042a578163cdf62e21146100c0575063ebf0c7171461006557600080fd5b346100bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100bc57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b5080fd5b90506101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610426576100f636610701565b90610100366107cd565b61010936610747565b61011236610789565b610144359473ffffffffffffffffffffffffffffffffffffffff9283871687036104225761017493839189518096819482937ff5c9d69e00000000000000000000000000000000000000000000000000000000845260209a8b988d860161089a565b03917f0000000000000000000000000000000000000000000000000000000000000000165afa9182156104185783926101b49189916103eb575b5061092d565b6101e081517f000000000000000000000000000000000000000000000000000000000000000014610992565b01926101ef84518754106109f7565b6101fa600154610a5c565b60015534471061036957845167ffffffffffffffff91838201918383118184101761033d57828993928480949381948c525234905af1903d15610337573d90811161030b57855190610273847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601836106c0565b815286833d92013e5b1561028957505051825551f35b608492508351917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602f60248201527f53747265616d696e673a3a736166655472616e736665724554483a204554482060448201527f7472616e73666572206661696c656400000000000000000000000000000000006064820152fd5b6024876041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5061027c565b6024896041887f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b608483838751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602f60248201527f53747265616d696e673a3a736166655472616e736665724554483a20496e737560448201527f6666696369656e7420616d6f756e7400000000000000000000000000000000006064820152fd5b61040b9150843d8611610411575b61040381836106c0565b81019061085a565b386101ae565b503d6103f9565b86513d89823e3d90fd5b8880fd5b8280fd5b5050346100bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100bc57602091549051908152f35b5050346100bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100bc576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b5050346100bc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100bc576020906001549051908152f35b905034610426576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104265761054c36610701565b906020610558366107cd565b9261056236610747565b926105a261056f36610789565b8095885197889586957ff5c9d69e000000000000000000000000000000000000000000000000000000008752860161089a565b038173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa918215610668576020926105f7918691610651575061092d565b61062381517f000000000000000000000000000000000000000000000000000000000000000014610992565b0161063181518454106109f7565b61063d815142106109f7565b610648600154610a5c565b60015551825551f35b61040b9150843d81116104115761040381836106c0565b50505051903d90823e3d90fd5b6040810190811067ffffffffffffffff82111761069157604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761069157604052565b8060231215610742576040519061071782610675565b816044918211610742576004905b8282106107325750505090565b8135815260209182019101610725565b600080fd5b8060e31215610742576040519061075d82610675565b816101049182116107425760c4905b8282106107795750505090565b813581526020918201910161076c565b80610123121561074257604051906107a082610675565b8161014491821161074257610104905b8282106107bd5750505090565b81358152602091820191016107b0565b8060631215610742576040908151916107e583610675565b60c483838211610742576044905b82821061080257505050505090565b84601f8301121561074257835161081881610675565b808584018781116107425791869285949294905b808210610844575050815292019160200190506107f3565b813586526020958601958995509091019061082c565b90816020910312610742575180151581036107425790565b6000915b6002831061088357505050565b600190825181526020809101920192019190610876565b929390946108ad84610140810197610872565b604091828501939160009182955b6002808810156109055786908651839087915b8383106108eb5750505050602090600192019501960195936108bb565b815181528a945060019290920191602091820191016108ce565b5050945095610100935061092b959250610924915060c0830190610872565b0190610872565b565b1561093457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c69642070726f6f66000000000000000000000000000000000000006044820152fd5b1561099957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f696e76616c696420726f6f7400000000000000000000000000000000000000006044820152fd5b156109fe57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f6f6c64204f5450000000000000000000000000000000000000000000000000006044820152fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a895760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220feafd3ed1523ac98fb36a884c2b48645cf33e06d633570736d016936b8f47e5c64736f6c634300080f0033a2646970667358221220840020699c6cf907857c57496ea88846f692ec0ca61fdf7a02bd775b914b30bb64736f6c634300080f0033";

type OTPFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OTPFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OTPFactory__factory extends ContractFactory {
  constructor(...args: OTPFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OTPFactory> {
    return super.deploy(overrides || {}) as Promise<OTPFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OTPFactory {
    return super.attach(address) as OTPFactory;
  }
  override connect(signer: Signer): OTPFactory__factory {
    return super.connect(signer) as OTPFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OTPFactoryInterface {
    return new utils.Interface(_abi) as OTPFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OTPFactory {
    return new Contract(address, _abi, signerOrProvider) as OTPFactory;
  }
}
