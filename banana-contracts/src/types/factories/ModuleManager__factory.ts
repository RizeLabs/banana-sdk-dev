/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ModuleManager, ModuleManagerInterface } from "../ModuleManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "CallerIsNotSelf",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "ModuleAlreadyEnabled",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "expectedModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "returnedModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "prevModule",
        type: "address",
      },
    ],
    name: "ModuleAndPrevModuleMismatch",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "ModuleCannotBeZeroOrSentinel",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "ModuleNotEnabled",
    type: "error",
  },
  {
    inputs: [],
    name: "ModulesAlreadyInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "ModulesSetupExecutionFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "DisabledModule",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "EnabledModule",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "txGas",
        type: "uint256",
      },
    ],
    name: "ExecutionFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "ExecutionFromModuleFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "ExecutionFromModuleSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "txGas",
        type: "uint256",
      },
    ],
    name: "ExecutionSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "ModuleTransaction",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevModule",
        type: "address",
      },
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "disableModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "enableModule",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execTransactionFromModule",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execTransactionFromModuleReturnData",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "returnData",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "start",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "pageSize",
        type: "uint256",
      },
    ],
    name: "getModulesPaginated",
    outputs: [
      {
        internalType: "address[]",
        name: "array",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "next",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "isModuleEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610e7b908161001c8239f35b600080fdfe60806040526004361015610013575b600080fd5b6000803560e01c9081632d9ad53d1461008e57508063468721a7146100855780635229073f1461007c578063610b592514610073578063cc2f84521461006a5763e009cfde1461006257600080fd5b61000e6107fb565b5061000e610691565b5061000e61038c565b5061000e610340565b5061000e6102b3565b3461010d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261010d5773ffffffffffffffffffffffffffffffffffffffff806100db610110565b1691826001141592836100f5575b83151560805260206080f35b604092935081528060205220541615158180806100e9565b80fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361000e57565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f604051930116820182811067ffffffffffffffff8211176101ca57604052565b6101d2610156565b604052565b60643590600282101561000e57565b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82011261000e57610218610110565b916024359167ffffffffffffffff60443581811161000e578260238201121561000e5780600401359182116102a6575b61027960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601610186565b928284526024838301011161000e57816000926024602093018386013783010152906102a36101d7565b90565b6102ae610156565b610248565b503461000e5760206102d06102c7366101e6565b92919091610ba0565b6040519015158152f35b60005b8381106102ed5750506000910152565b81810151838201526020016102dd565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093610339815180928187528780880191016102da565b0116010190565b503461000e576103526102c7366101e6565b6040519060203d8301016040523d82523d6000602084013e610388604051928392151583526040602084015260408301906102fd565b0390f35b503461000e5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576103c4610110565b6103cc610e0c565b73ffffffffffffffffffffffffffffffffffffffff81168015908115610615575b506105cc5761045561043c6104228373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b61057f57600160009081526020527fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f84409061057a9061051f6104b57fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d610422565b6104df8373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60016000908152602052610553817fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d6104df565b60405173ffffffffffffffffffffffffffffffffffffffff90911681529081906020820190565b0390a1005b6040517fb29d459500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602490fd5b0390fd5b6040517fcadb248f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602490fd5b6001915014386103ed565b90929192604082016040835281518091526060830160208093019160005b848282106106675750505073ffffffffffffffffffffffffffffffffffffffff91509416910152565b845173ffffffffffffffffffffffffffffffffffffffff168452938401939092019160010161063e565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e576106c9610110565b602435906106de6106d983610a4f565b610186565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061070b84610a4f565b0136602083013760009273ffffffffffffffffffffffffffffffffffffffff8093168452836020526107556040852073ffffffffffffffffffffffffffffffffffffffff90541690565b83811680151590816107ef575b50806107e6575b156107d3576107c7610422826107a16107cd946107868a89610a76565b9073ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b94610ab9565b93610755565b8285815261038860405192839283610620565b50818510610769565b60019150141538610762565b503461000e5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261000e57610833610110565b61083b610133565b610843610e0c565b73ffffffffffffffffffffffffffffffffffffffff811680158015610a45575b6109fe5761089761043c6104228573ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b03610971578061091c7faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace4054276936104df6108f561042261057a9673ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b9173ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b6105536109498273ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b7fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055565b6105c86109a16104228473ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b6040517fc40d496c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152908316602482015292909116604483015281906064820190565b6040517fcadb248f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152602490fd5b5060018114610863565b60209067ffffffffffffffff8111610a69575b60051b0190565b610a71610156565b610a62565b8051821015610a8a5760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ae65760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b906002821015610b225752565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b95949293610b9e94610b969260809473ffffffffffffffffffffffffffffffffffffffff8092168a52166020890152604088015260a0606088015260a08701906102fd565b940190610b15565b565b93929193600133148015610d8b575b610d5b575a9460006002851015610d2e5760018503610d1d5750600080825160208401858af4955b8615610cc35783610be783610dd3565b917f81d12fffced46c214dfae8ab8fa0b9f7b69f70c9d500e33f612f2105deb261ee60405180610c2f73ffffffffffffffffffffffffffffffffffffffff8916948b83610df3565b0390a45b8515610c97577f8c014e41cffd68ba64f3e7830b8b2e4ee860509d8deab25ebbcbba2f0405e2da93610c6c916040519485943386610b51565b0390a1337f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb8600080a2565b50505050337facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd375600080a2565b83610ccd83610dd3565b917f3ddd038f78c876172d5dbfd730b14c9f8692dfa197ef104eaac6df3f85a0874a60405180610d1573ffffffffffffffffffffffffffffffffffffffff8916948b83610df3565b0390a4610c33565b8082516020840186868bf195610bd7565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526021600452fd5b60246040517f21ac7c5f000000000000000000000000000000000000000000000000000000008152336004820152fd5b5073ffffffffffffffffffffffffffffffffffffffff610dcb3373ffffffffffffffffffffffffffffffffffffffff166000526000602052604060002090565b541615610baf565b610deb906020604051928284809451938492016102da565b810103902090565b60209093929193610e08816040810196610b15565b0152565b303303610e1557565b60246040517f051e38cc000000000000000000000000000000000000000000000000000000008152336004820152fdfea2646970667358221220ebed08665f4e964e86944c56da7c0534f2f8141560c945092be40caf509787e964736f6c63430008110033";

type ModuleManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ModuleManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ModuleManager__factory extends ContractFactory {
  constructor(...args: ModuleManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ModuleManager> {
    return super.deploy(overrides || {}) as Promise<ModuleManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ModuleManager {
    return super.attach(address) as ModuleManager;
  }
  override connect(signer: Signer): ModuleManager__factory {
    return super.connect(signer) as ModuleManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ModuleManagerInterface {
    return new utils.Interface(_abi) as ModuleManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ModuleManager {
    return new Contract(address, _abi, signerOrProvider) as ModuleManager;
  }
}
