/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GasEstimatorSmartAccount,
  GasEstimatorSmartAccountInterface,
} from "../GasEstimatorSmartAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_actualWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "uint256[2]",
        name: "_owner",
        type: "uint256[2]",
      },
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "estimate",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "gas",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576103ef908161001c8239f35b600080fdfe608060048036101561001057600080fd5b6000803560e01c63ee6af9cd1461002657600080fd5b346103465760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103465781359073ffffffffffffffffffffffffffffffffffffffff808316830361034257602491823592828416809403610342573660631215610342576040928388019567ffffffffffffffff96898110888211176103175785526084893682116102d4576044905b82821061030757505060a435928884116102d457366023850112156102d457838a0135918983116103035736868487010111610303575a988851917fe72e09220000000000000000000000000000000000000000000000000000000083528c830189905b600282106102ed57505088999a9b9c9d503560448301528160648160209a8b945af180156102e3579188949391879361029a575b505083948185928b51948593018337810182815203925af1963d15610291573d968711610267578451966101ae847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160189610349565b87523d848489013e5b5a860395861161023d57505094929190815195869415158552606081860152855195866060870152825b87811061022657505050937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe092601f9260809687848801015285015201168101030190f35b8181018301518982016080015288965082016101e1565b601184917f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b604184917f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b606096506101b7565b80929496955088809294503d83116102dc575b6102b78183610349565b810103126102d85751908116036102d45791838692933880610153565b8580fd5b8780fd5b503d6102ad565b89513d8a823e3d90fd5b8f51815260208091019f0190600101909e61011f565b8680fd5b81358152602091820191016100bb565b838560418b7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5080fd5b80fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761038a57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea2646970667358221220511b585380e71bc4da072db5e871a19e4a5d367464a636e4947343e3088b77a264736f6c63430008110033";

type GasEstimatorSmartAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GasEstimatorSmartAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GasEstimatorSmartAccount__factory extends ContractFactory {
  constructor(...args: GasEstimatorSmartAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GasEstimatorSmartAccount> {
    return super.deploy(overrides || {}) as Promise<GasEstimatorSmartAccount>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GasEstimatorSmartAccount {
    return super.attach(address) as GasEstimatorSmartAccount;
  }
  override connect(signer: Signer): GasEstimatorSmartAccount__factory {
    return super.connect(signer) as GasEstimatorSmartAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GasEstimatorSmartAccountInterface {
    return new utils.Interface(_abi) as GasEstimatorSmartAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GasEstimatorSmartAccount {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GasEstimatorSmartAccount;
  }
}
