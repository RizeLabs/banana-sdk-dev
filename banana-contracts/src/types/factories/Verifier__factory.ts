/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Verifier, VerifierInterface } from "../Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "input",
        type: "uint256[2]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611315806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063f5c9d69e14610030575b600080fd5b61004361003e366004611102565b610057565b604051901515815260200160405180910390f35b6000610061610ef9565b60408051808201825287518152602080890151818301529083528151608081018352875151818401908152885183015160608084019190915290825283518085018552898401805151825251840151818501528284015284830191909152825180840184528751815287830151818401528484015282516002808252918101845260009390928301908036833701905050905060005b600281101561014657848160028110610112576101126111a2565b6020020151828281518110610129576101296111a2565b60209081029190910101528061013e81611200565b9150506100f7565b506101518183610172565b6000036101635760019250505061016a565b6000925050505b949350505050565b60007f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000018161019e6103a8565b9050806080015151855160016101b49190611238565b14610220576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f76657269666965722d6261642d696e707574000000000000000000000000000060448201526064015b60405180910390fd5b604080518082019091526000808252602082018190525b865181101561032b5783878281518110610253576102536111a2565b6020026020010151106102c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c64006044820152606401610217565b6103178261031285608001518460016102db9190611238565b815181106102eb576102eb6111a2565b60200260200101518a8581518110610305576103056111a2565b60200260200101516107bb565b610876565b91508061032381611200565b915050610237565b50610354818360800151600081518110610347576103476111a2565b6020026020010151610876565b905061038a6103668660000151610934565b8660200151846000015185602001518587604001518b6040015189606001516109d3565b61039a57600193505050506103a2565b600093505050505b92915050565b6103b0610f4a565b6040805180820182527f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e281527f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d19266020808301919091529083528151608080820184527f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c8285019081527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab606080850191909152908352845180860186527f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a781527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec8818601528385015285840192909252835180820185527f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c28186019081527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed828501528152845180860186527f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa818601528185015285850152835180820185527f0dc6ba74c8cf2252dd58d0d62d24c3f8b2d823069781e5b133e74d274bee94bb8186019081527f2d0370065099665dbbd8a6108b34335e31fb47da0e3b8468a80f3cef4610891b828501528152845180860186527f2deb4617440c5e02ea31119e4d1c21a083d36dae6f7df60dfef8bf807c1aeced81527f18ca818af86f483fdb27ffb5a948f89d3891cb7dabc2eec66c33ad0051b42eda818601528185015291850191909152825160038082529181019093529082015b604080518082019091526000808252602082015281526020019060019003908161062c57505060808201908152604080518082019091527f113f07c8e66589eea4ce94eb7e14a3ab3cbc5bb89519c0e9abb3a554e203f6de81527f14e9756a013643e62e5c523717478ff3bcc13a89a2e7050364a6cfd88d454cc96020820152905180516000906106bf576106bf6111a2565b602002602001018190525060405180604001604052807f21f758de24711811cdfd62b9734c881cbd6f535ab10a711cb2d14858b56a7dfc81526020017f0ea3d9d3adf68442d910decbd8599af5df18f1d02cd559f5ef7a42b0a03b484a8152508160800151600181518110610736576107366111a2565b602002602001018190525060405180604001604052807f0deb62dc24180ac0256dd3e70573247de143ab5851467703f7373ccead87b9f581526020017f235a4794ffea451697248c05b2b4ef9fac5af4861c3077ec070e71581891aa1581525081608001516002815181106107ad576107ad6111a2565b602002602001018190525090565b60408051808201909152600080825260208201526107d7610f9b565b835181526020808501519082015260408101839052600060608360808460076107d05a03fa9050808061080657fe5b508061086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f70616972696e672d6d756c2d6661696c656400000000000000000000000000006044820152606401610217565b505092915050565b6040805180820190915260008082526020820152610892610fb9565b8351815260208085015181830152835160408301528301516060808301919091526000908360c08460066107d05a03fa905080806108cc57fe5b508061086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f70616972696e672d6164642d6661696c656400000000000000000000000000006044820152606401610217565b604080518082019091526000808252602082015281517f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479015801561097b57506020830151155b1561099b5750506040805180820190915260008082526020820152919050565b6040518060400160405280846000015181526020018285602001516109c09190611250565b6109ca908461128b565b90529392505050565b60408051600480825260a08201909252600091829190816020015b60408051808201909152600080825260208201528152602001906001900390816109ee57505060408051600480825260a0820190925291925060009190602082015b610a38610fd7565b815260200190600190039081610a305790505090508a82600081518110610a6157610a616111a2565b60200260200101819052508882600181518110610a8057610a806111a2565b60200260200101819052508682600281518110610a9f57610a9f6111a2565b60200260200101819052508482600381518110610abe57610abe6111a2565b60200260200101819052508981600081518110610add57610add6111a2565b60200260200101819052508781600181518110610afc57610afc6111a2565b60200260200101819052508581600281518110610b1b57610b1b6111a2565b60200260200101819052508381600381518110610b3a57610b3a6111a2565b6020026020010181905250610b4f8282610b5e565b9b9a5050505050505050505050565b60008151835114610bcb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f70616972696e672d6c656e677468732d6661696c6564000000000000000000006044820152606401610217565b82516000610bda8260066112a2565b905060008167ffffffffffffffff811115610bf757610bf7611033565b604051908082528060200260200182016040528015610c20578160200160208202803683370190505b50905060005b83811015610e5b57868181518110610c4057610c406111a2565b60200260200101516000015182826006610c5a91906112a2565b610c65906000611238565b81518110610c7557610c756111a2565b602002602001018181525050868181518110610c9357610c936111a2565b60200260200101516020015182826006610cad91906112a2565b610cb8906001611238565b81518110610cc857610cc86111a2565b602002602001018181525050858181518110610ce657610ce66111a2565b6020908102919091010151515182610cff8360066112a2565b610d0a906002611238565b81518110610d1a57610d1a6111a2565b602002602001018181525050858181518110610d3857610d386111a2565b60209081029190910181015151015182610d538360066112a2565b610d5e906003611238565b81518110610d6e57610d6e6111a2565b602002602001018181525050858181518110610d8c57610d8c6111a2565b602002602001015160200151600060028110610daa57610daa6111a2565b602002015182610dbb8360066112a2565b610dc6906004611238565b81518110610dd657610dd66111a2565b602002602001018181525050858181518110610df457610df46111a2565b602002602001015160200151600160028110610e1257610e126111a2565b602002015182610e238360066112a2565b610e2e906005611238565b81518110610e3e57610e3e6111a2565b602090810291909101015280610e5381611200565b915050610c26565b50610e64610ff7565b6000602082602086026020860160086107d05a03fa90508080610e8357fe5b5080610eeb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f70616972696e672d6f70636f64652d6661696c656400000000000000000000006044820152606401610217565b505115159695505050505050565b6040805160a081019091526000606082018181526080830191909152815260208101610f23610fd7565b8152602001610f45604051806040016040528060008152602001600081525090565b905290565b6040805160e08101909152600060a0820181815260c0830191909152815260208101610f74610fd7565b8152602001610f81610fd7565b8152602001610f8e610fd7565b8152602001606081525090565b60405180606001604052806003906020820280368337509192915050565b60405180608001604052806004906020820280368337509192915050565b6040518060400160405280610fea611015565b8152602001610f45611015565b60405180602001604052806001906020820280368337509192915050565b60405180604001604052806002906020820280368337509192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156110ac577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405290565b600082601f8301126110c357600080fd5b6110cb611062565b8060408401858111156110dd57600080fd5b845b818110156110f75780358452602093840193016110df565b509095945050505050565b600080600080610140858703121561111957600080fd5b61112386866110b2565b9350604086605f87011261113657600080fd5b61113e611062565b8060c088018981111561115057600080fd5b8389015b81811015611175576111668b826110b2565b84526020909301928401611154565b508196506111838a826110b2565b9550505050506111978661010087016110b2565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611231576112316111d1565b5060010190565b6000821982111561124b5761124b6111d1565b500190565b600082611286577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b60008282101561129d5761129d6111d1565b500390565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112da576112da6111d1565b50029056fea264697066735822122075182095e08b6b11eb117908342975af40fbbd474efd749107d28316e46a3e9b64736f6c634300080f0033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Verifier> {
    return super.deploy(overrides || {}) as Promise<Verifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  override connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
