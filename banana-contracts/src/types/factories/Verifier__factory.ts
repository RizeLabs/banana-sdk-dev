/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Verifier, VerifierInterface } from "../Verifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2]",
        name: "input",
        type: "uint256[2]",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "r",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761129e908161001c8239f35b600080fdfe604060808152600436101561001357600080fd5b6000803560e01c63f5c9d69e1461002957600080fd5b346100dc576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100dc576100623661019c565b9036606312156100dc5761007461010f565b908160c4913683116100dc57506044905b8282106100c3576100bf866100ae878761009e366101de565b906100a83661021c565b92610532565b905190151581529081906020820190565b0390f35b602086916100d1368561025c565b815201910190610085565b80fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051906040820182811067ffffffffffffffff82111761012f57604052565b6101376100df565b604052565b604051906060820182811067ffffffffffffffff82111761012f57604052565b604051906080820182811067ffffffffffffffff82111761012f57604052565b6040519060a0820182811067ffffffffffffffff82111761012f57604052565b80602312156101d9576101ad61010f565b908160449182116101d9576004905b8282106101c95750505090565b81358152602091820191016101bc565b600080fd5b8060e312156101d9576101ef61010f565b90816101049182116101d95760c4905b82821061020c5750505090565b81358152602091820191016101ff565b8061012312156101d95761022e61010f565b90816101449182116101d957610104905b82821061024c5750505090565b813581526020918201910161023f565b9080601f830112156101d95761027061010f565b8092604081019283116101d957905b82821061028c5750505090565b813581526020918201910161027f565b604051906020820182811067ffffffffffffffff8211176102c2575b6040526020368337565b6102ca6100df565b6102b8565b6102d761010f565b906102e061010f565b604036823782526102ef61010f565b60403682376020830152565b604051906060820182811067ffffffffffffffff821117610357575b6040528161032361010f565b600081526000602082015281526103386102cf565b6020820152604061034761010f565b9160008352600060208401520152565b61035f6100df565b610317565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060028110156103a6575b60051b0190565b6103ae610364565b61039f565b60209067ffffffffffffffff81116103cc5760051b0190565b6103ae6100df565b6103dc61013c565b60028152906040366020840137565b906103f5826103b3565b604051907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090601f018116820167ffffffffffffffff811183821017610450575b60405283825261044682946103b3565b0190602036910137565b6104586100df565b610436565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146104bb570190565b6104c361045d565b0190565b6020908051156104d5570190565b6104c3610364565b6040908051600110156104d5570190565b6060908051600210156104d5570190565b6080908051600310156104d5570190565b6020918151811015610525575b60051b010190565b61052d610364565b61051d565b9291909261053e6102fb565b93815160208093015161054f61010f565b91825283820152855261056061010f565b908051518252610571815160200190565b51838301526105908361058261010f565b920180515183525160200190565b518382015261059d61010f565b9182528282015281850152808251920151906105b761010f565b92835282015260408301526105ca6103d4565b9060005b600281106105f0575050906105e2916107c4565b6105eb57600190565b600090565b806105fe61060f9284610394565b516106098286610510565b5261048d565b6105ce565b6001907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe81116104bb570190565b6002907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd81116104bb570190565b6003907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc81116104bb570190565b6004907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb81116104bb570190565b6005907ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa81116104bb570190565b1561070157565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f76657269666965722d6261642d696e70757400000000000000000000000000006044820152fd5b1561076657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f76657269666965722d6774652d736e61726b2d7363616c61722d6669656c64006044820152fd5b9190916107cf610ead565b916107da8251610614565b906107ec6080850192835151146106fa565b6107f461010f565b6000815260006020820152946000955b84518710156108845761087861087e916108497f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000016108428b8a610510565b511061075f565b610872610860875161085a8c610614565b90610510565b5161086b8b8a610510565b51906109f0565b9061097b565b9661048d565b95610804565b6108d6959296506108d2945061089e6108a59294516104c7565b519061097b565b916108b081516108e4565b9260208201518351602085015191606060408088015196015196015196610ad6565b1590565b6108df57600090565b600190565b600060206108f061010f565b82815201528051158061096f575b6109585760208151917f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd479182910151069081811061094b575b61093f61010f565b92835203602082015290565b61095361045d565b610937565b5061096161010f565b600081526000602082015290565b506020810151156108fe565b60609092919260c061098b61010f565b91600083526000602084015260208396816109a461015c565b936080368637805185520151828401528051604084015201518482015260067ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8305a01fa156109ee57565bfe5b6060909291926080610a0061010f565b91600083526000602084015282956020610a1861013c565b92863685378051845201516020830152604082015260077ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8305a01fa156109ee57565b610a6261017c565b6004815290600082815b60808110610a7957505050565b602090610a8461010f565b848152828581830152828501015201610a6c565b610aa061015c565b6003815290600082815b60608110610ab757505050565b602090610ac261010f565b848152828581830152828501015201610aaa565b97969394929195610ae5610a5a565b95610aee61017c565b976004895260005b60808110610bac5750610ba9999a610b0d896104c7565b52610b17886104c7565b50610b21886104dd565b52610b2b876104dd565b50610b35876104ee565b52610b3f866104ee565b50610b49866104ff565b52610b53856104ff565b50610b5d866104c7565b52610b67856104c7565b50610b71856104dd565b52610b7b846104dd565b50610b85846104ee565b52610b8f836104ee565b50610b99836104ff565b52610ba3826104ff565b50610ccd565b90565b602090610bb76102cf565b82828d01015201610af6565b15610bca57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f70616972696e672d6c656e677468732d6661696c6564000000000000000000006044820152fd5b600690807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821181151516610c5c570290565b610c6461045d565b0290565b15610c6f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f70616972696e672d6f70636f64652d6661696c656400000000000000000000006044820152fd5b610cda8151835114610bc3565b8051610ce581610c28565b92610cef846103eb565b9260005b838110610d4e57505050506020918291610d0b61029c565b93849260051b910160087ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8305a01fa80156109ee57610d4890610c68565b51151590565b80610d5c610e389284610510565b5151610d70610d6a83610c28565b88610510565b52610e23602080610d818487610510565b510151610d9e610d98610d9386610c28565b610614565b8a610510565b52610da98387610510565b515151610dc0610d98610dbb86610c28565b610642565b52610dd6610dce8488610510565b515160200190565b51610deb610d98610de686610c28565b610670565b5280610df78488610510565b51015151610e0f610d98610e0a86610c28565b61069e565b52610e1a8387610510565b51015160200190565b51610609610d6a610e3384610c28565b6106cc565b610cf3565b6040519060a0820182811067ffffffffffffffff821117610ea0575b6040526060608083610e6961010f565b60008152600060208201528152610e7e6102cf565b6020820152610e8b6102cf565b6040820152610e986102cf565b838201520152565b610ea86100df565b610e59565b610eb5610e3d565b90611265610ec161010f565b7f2d4d9aa7e302d9df41749d5507949d05dbea33fbb16c643b22f599a2be6df2e281526020907f14bedd503c37ceb061d8ec60209fe345ce89830a19230301f076caff004d1926828201528452610f1661010f565b7f0967032fcbf776d1afc985f88877f182d38480a653f2decaa9794cbc3bf3060c81527f0e187847ad4c798374d0d6732bf501847dd68bc0e071241e0213bc7fc13db7ab82820152610f6661010f565b7f304cfbd1e08a704a99f5e847d93f8c3caafddec46b7a0d379da69a4d112346a781527f1739c1b1a457a8c7313123d24d2f9192f896b7c63eea05a9d57f06547ad0cec883820152610fb661010f565b9182528282015281850152610fc961010f565b7f198e9393920d483a7260bfb731fb5d25f1aa493335a9e71297e485b7aef312c281527f1800deef121f1e76426a00665e5c4479674322d4f75edadd46debd5cd992f6ed8282015261101961010f565b7f090689d0585ff075ec9e99ad690c3395bc4b313370b38ef355acdadcd122975b81527f12c85ea5db8c6deb4aab71808dcb408fe3d1e7690c43d37b4ce6cc0166fa7daa8382015261106961010f565b91825282820152604085015261107d61010f565b7f0dc6ba74c8cf2252dd58d0d62d24c3f8b2d823069781e5b133e74d274bee94bb81527f2d0370065099665dbbd8a6108b34335e31fb47da0e3b8468a80f3cef4610891b828201526110cd61010f565b7f2deb4617440c5e02ea31119e4d1c21a083d36dae6f7df60dfef8bf807c1aeced81527f18ca818af86f483fdb27ffb5a948f89d3891cb7dabc2eec66c33ad0051b42eda8382015261111d61010f565b918252828201526060850152611131610a98565b6080850190815261119d61114361010f565b7f113f07c8e66589eea4ce94eb7e14a3ab3cbc5bb89519c0e9abb3a554e203f6de81527f14e9756a013643e62e5c523717478ff3bcc13a89a2e7050364a6cfd88d454cc984820152825190611197826104c7565b526104c7565b506112036111a961010f565b7f21f758de24711811cdfd62b9734c881cbd6f535ab10a711cb2d14858b56a7dfc81527f0ea3d9d3adf68442d910decbd8599af5df18f1d02cd559f5ef7a42b0a03b484a848201528251906111fd826104dd565b526104dd565b507f235a4794ffea451697248c05b2b4ef9fac5af4861c3077ec070e71581891aa1561122d61010f565b927f0deb62dc24180ac0256dd3e70573247de143ab5851467703f7373ccead87b9f58452830152519061125f826104ee565b526104ee565b5056fea2646970667358221220db70e3d6cfe8eb3fd5748e3a7d0efa72ca892c0120f3c61aa671a6bad4c455c064736f6c634300080f0033";

type VerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Verifier__factory extends ContractFactory {
  constructor(...args: VerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Verifier> {
    return super.deploy(overrides || {}) as Promise<Verifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Verifier {
    return super.attach(address) as Verifier;
  }
  override connect(signer: Signer): Verifier__factory {
    return super.connect(signer) as Verifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifierInterface {
    return new utils.Interface(_abi) as VerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Verifier {
    return new Contract(address, _abi, signerOrProvider) as Verifier;
  }
}
