/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TokenPaymaster,
  TokenPaymasterInterface,
} from "../TokenPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "accountFactory",
        type: "address",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "theFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x604060c08152346200053c576200245f803803806200001e816200056b565b9283398101906060818303126200053c578051916001600160a01b039182841684036200053c5760208181015190946001600160401b039390918481116200053c57830194601f938285880112156200053c5786518681116200052657601f1997620000908288018a168b016200056b565b948286528a83830101116200053c5790898b93926000905b838210620005505750821062000541575b505001519080821682036200053c57600054903360018060a01b03198316176000553391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060008b51a360805280519380851162000526576004958654956001968781811c911680156200051b575b8a8210146200042d57868111620004d0575b5080898782116001146200046e5760009162000462575b50600019600383901b1c191690871b1787555b82519182116200044d5760059283548781811c9116801562000442575b8a8210146200042d5790818785949311620003d7575b50899187841160011462000372575060009262000366575b5050600019600383901b1c191690851b1790555b60a05230156200032557506003546001198111620003105781016003553060005280835283600020818154019055835190815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843093a33315620002c4575030600052600281528160002033600052815260001980836000205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92533923092a351611ecd90816200059282396080518181816109ad01528181610ab001528181610b8501528181610c4201528181610cf2015281816115070152818161178b0152611d9f015260a0518181816101ed0152610fca0152f35b915162461bcd60e51b815291820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b601183634e487b7160e01b6000525260246000fd5b905060649284519262461bcd60e51b845283015260248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b015190503880620001b0565b88949291921691856000528a6000209260005b8c828210620003c05750508411620003a6575b505050811b019055620001c4565b015160001960f88460031b161c1916905538808062000398565b8385015186558b9790950194938401930162000385565b90919250846000528960002087808601871c8201928c871062000423575b918a91879695949301881c01915b8281106200041357505062000198565b600081558695508a910162000403565b92508192620003f5565b602289634e487b7160e01b6000525260246000fd5b90607f169062000182565b604187634e487b7160e01b6000525260246000fd5b90508401513862000152565b83899316908a6000528b6000209160005b8d828210620004b957505083116200049f575b5050811b01875562000165565b86015160001960f88460031b161c19169055388062000492565b838a015185558c969094019392830192016200047f565b88600052896000208780840160051c8201928c851062000511575b0160051c019088905b828110620005045750506200013b565b60008155018890620004f4565b92508192620004eb565b90607f169062000129565b634e487b7160e01b600052604160045260246000fd5b600080fd5b600091860101523889620000b9565b8082018301518883018401528d95508c9290910190620000a8565b6040519190601f01601f191682016001600160401b03811183821017620005265760405256fe6040608081526004908136101561001557600080fd5b600090813560e01c80630396cb601461173057806306fdde03146115ff578063095ea7b3146115b857806318160ddd1461157c578063205c2878146114ae57806323b872dd1461137f578063313ce5671461134657806339509351146112cc57806370a0823114611287578063715018a6146111e8578063796d4371146111ae5780638da5cb5b1461115e57806395d89b4114610fee5780639f5ca22114610f80578063a457c2d714610e7b578063a9059cbb14610e2d578063a9a2340914610d16578063b0d691fe14610ca8578063bb9fe6bf14610bf2578063c23a5cea14610b2b578063c399ec8814610a37578063d0e30db01461096a578063dd62ed3e146108f4578063f0dda65c146107e8578063f2fde38b146105075763f465c77e1461013f57600080fd5b34610503577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc916060833601126105005767ffffffffffffffff9284358481116104fc576101608187019282360301126104fc5761019b611d88565b604490606482350490613a9860a4820135111561047a5782016101be8185611e25565b159050610402576101cf9084611e25565b6014116103fe5773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016903560601c0361037c5761024a61022384611e76565b73ffffffffffffffffffffffffffffffffffffffff16600052600160205260406000205490565b106102fa575061025990611e76565b9173ffffffffffffffffffffffffffffffffffffffff8151931660208401526020835280830193838510908511176102cc57837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0949550815284526102c1608083018361180f565b906060830152030190f35b6041857f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b857f546f6b656e5061796d61737465723a206e6f2062616c616e636520287072652d60849260208751937f08c379a0000000000000000000000000000000000000000000000000000000008552840152602760248401528201527f63726561746529000000000000000000000000000000000000000000000000006064820152fd5b6084877f546f6b656e5061796d61737465723a2077726f6e67206163636f756e742066618460208951937f08c379a0000000000000000000000000000000000000000000000000000000008552840152602560248401528201527f63746f72790000000000000000000000000000000000000000000000000000006064820152fd5b8480fd5b5061040f61022384611e76565b1061041e575061025990611e76565b857f546f6b656e5061796d61737465723a206e6f2062616c616e636500000000000060649260208751937f08c379a0000000000000000000000000000000000000000000000000000000008552840152601a6024840152820152fd5b6084887f546f6b656e5061796d61737465723a2067617320746f6f206c6f7720666f72208560208a51937f08c379a0000000000000000000000000000000000000000000000000000000008552840152602660248401528201527f706f73744f7000000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b80fd5b5080fd5b5082346104fc576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126107e45761054161187e565b6105496118c4565b73ffffffffffffffffffffffffffffffffffffffff91828654169130156107635782156106e1578390306000526002835286600020846000528352600087812055865193600085527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259485853092a36105c06118c4565b1693841561066057508360005493817fffffffffffffffffffffffff0000000000000000000000000000000000000000861617600055865194167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600086a33060005260028152846000208460005281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80866000205583523092a351f35b6084918651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b608485838851917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b608485838851917f08c379a00000000000000000000000000000000000000000000000000000000083528201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b8380fd5b5082346104fc57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104fc5761082061187e565b73ffffffffffffffffffffffffffffffffffffffff602435916108416118c4565b1691821561089757507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60208261087b87946003546119c7565b600355848452600182528584208181540190558551908152a351f35b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152fd5b503461050357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105035760209161092e61187e565b826109376118a1565b9273ffffffffffffffffffffffffffffffffffffffff809316815260028652209116600052825280600020549051908152f35b508183817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105035773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b156104fc57829060248551809481937fb760faf9000000000000000000000000000000000000000000000000000000008352309083015234905af18015610a2a57610a1a57505051f35b610a2390611943565b6105035751f35b50505051903d90823e3d90fd5b508290346104fc57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104fc578051917f70a08231000000000000000000000000000000000000000000000000000000008352309083015260208260248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa918215610b21578392610aea575b6020838351908152f35b9091506020813d8211610b19575b81610b0560209383611986565b810103126104fc5760209250519083610ae0565b3d9150610af8565b81513d85823e3d90fd5b508183346105035760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261050357610b6561187e565b610b6d6118c4565b73ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803b156103fe57849283602492885196879586947fc23a5cea00000000000000000000000000000000000000000000000000000000865216908401525af18015610a2a57610a1a57505051f35b5081833461050357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261050357610c2b6118c4565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b156104fc57829182918551809481937fbb9fe6bf0000000000000000000000000000000000000000000000000000000083525af18015610a2a57610a1a57505051f35b503461050357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610503576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50346105035760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610503576003833510156105035760243567ffffffffffffffff8082116107e457366023830112156107e457818501359081116107e4578101903660248301116107e45760208160443593610d95611d88565b03126107e457602401359073ffffffffffffffffffffffffffffffffffffffff8216809203610e28577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc5678111610dfc57906064613a98610df9930104903090611a02565b51f35b6024846011877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b600080fd5b503461050357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261050357602090610e74610e6a61187e565b6024359033611a02565b5160018152f35b5091903461050057827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261050057610eb461187e565b91836024359233815260026020522073ffffffffffffffffffffffffffffffffffffffff8416600052602052836000205490828210610efd57602085610e748585038733611c13565b60849060208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152fd5b503461050357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610503576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b50903461050057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610500578151918160055492600184811c91818616958615611154575b6020968785108114611128578899509688969785829a5291826000146110e3575050600114611087575b5050506110839291611074910385611986565b5192828493845283019061180f565b0390f35b9190869350600583527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b8284106110cb5750505082010181611074611083611061565b8054848a0186015288955087949093019281016110b2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168782015293151560051b8601909301935084925061107491506110839050611061565b60248360228c7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b92607f1692611037565b503461050357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105035773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b503461050357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105035760209051613a988152f35b503461050357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105035761121f6118c4565b600073ffffffffffffffffffffffffffffffffffffffff8154927fffffffffffffffffffffffff0000000000000000000000000000000000000000841683555192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b50346105035760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610503576020906112c561022361187e565b9051908152f35b503461050357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261050357610e746020928261130a61187e565b91338152600286522073ffffffffffffffffffffffffffffffffffffffff8216600052845261133f60243584600020546119c7565b9033611c13565b503461050357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610503576020905160128152f35b5091346105035760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610503576113b861187e565b6113c06118a1565b91846044359473ffffffffffffffffffffffffffffffffffffffff84168152600260205220336000526020528460002054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611428575b602086610e74878787611a02565b848210611451575091839161144660209695610e7495033383611c13565b91939481935061141a565b60649060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b5081833461050357827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610503576114e761187e565b6114ef6118c4565b73ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803b156103fe57849283604492885196879586947f205c2878000000000000000000000000000000000000000000000000000000008652169084015260243560248401525af18015610a2a57610a1a57505051f35b503461050357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610503576020906003549051908152f35b503461050357807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261050357602090610e746115f561187e565b6024359033611c13565b50903461050057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105005781519181845492600184811c91818616958615611726575b6020968785108114611128579087899a92868b999a9b5291826000146116de575050600114611683575b858861108389611074848a0385611986565b815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8284106116c6575050508201018161107461108338611671565b8054848a0186015288955087949093019281016116ac565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168882015294151560051b8701909401945085935061107492506110839150389050611671565b92607f1692611647565b509160207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261050357803563ffffffff81168091036104fc576117746118c4565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691823b156107e4579060248492865194859384927f0396cb6000000000000000000000000000000000000000000000000000000000845283015234905af18015611805576117f857509051f35b61180190611943565b9051f35b83513d84823e3d90fd5b91908251928382526000905b8482106118665750601f84602094957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09311611859575b0116010190565b6000858286010152611852565b9060209081808285010151908286010152019061181b565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610e2857565b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610e2857565b73ffffffffffffffffffffffffffffffffffffffff6000541633036118e557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff811161195757604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761195757604052565b811981116119d3570190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff809116918215611b8f5716918215611b0b5760008281526001602052604081205491808310611a8757604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95876020965260018652038282205586815220818154019055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff809116918215611d055716918215611c815760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260028252604060002085600052825280604060002055604051908152a3565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152fd5b60846040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303611dc757565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152fd5b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610e28570180359067ffffffffffffffff8211610e2857602001918136038313610e2857565b3573ffffffffffffffffffffffffffffffffffffffff81168103610e28579056fea264697066735822122043f1cacc6c642675150def89090a46f223a484a62ea8b9b98335ab2cb4ab54ac64736f6c634300080f0033";

type TokenPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenPaymaster__factory extends ContractFactory {
  constructor(...args: TokenPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    accountFactory: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenPaymaster> {
    return super.deploy(
      accountFactory,
      _symbol,
      _entryPoint,
      overrides || {}
    ) as Promise<TokenPaymaster>;
  }
  override getDeployTransaction(
    accountFactory: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      accountFactory,
      _symbol,
      _entryPoint,
      overrides || {}
    );
  }
  override attach(address: string): TokenPaymaster {
    return super.attach(address) as TokenPaymaster;
  }
  override connect(signer: Signer): TokenPaymaster__factory {
    return super.connect(signer) as TokenPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenPaymasterInterface {
    return new utils.Interface(_abi) as TokenPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenPaymaster {
    return new Contract(address, _abi, signerOrProvider) as TokenPaymaster;
  }
}
