/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DepositPaymaster,
  DepositPaymasterInterface,
} from "../DepositPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addDepositFor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract IOracle",
        name: "tokenPriceOracle",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_unlockBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "oracles",
    outputs: [
      {
        internalType: "contract IOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "unlockBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockTokenDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTokensTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100e857601f611db238819003918201601f19168301916001600160401b038311848410176100ed578084926020946040528339810103126100e857516001600160a01b039081811681036100e8576000543360018060a01b0319821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600085a360805233600052600360205243604060002055611cae908161010482396080518181816107f301528181610ac101528181610c0a01528181610ccb01528181610d7c015281816114d9015281816115aa015261187e0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60406080815260048036101561001457600080fd5b600091823560e01c80630396cb601461154e57838163205c28781461148057508063382edd9e14611394578063493b01701461130a5780634a6f84cf146112a85780635476bd721461119c578063715018a6146110fc578063796d4371146110c15780638da5cb5b146110705780639ed0fb6814611030578063a9a2340914610e05578063addd509914610da0578063b0d691fe14610d3157838163bb9fe6bf14610c7b578163c23a5cea14610bb057508063c23f001f14610b39578063c399ec8814610a48578063cc9c837c146108c9578063cd8f80c21461088157838163d0e30db0146107b057508063f2fde38b146106765763f465c77e1461011857600080fd5b3461066f577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc926060843601126106735782359167ffffffffffffffff9384841161066f57838101936101608136039788011261066b5760449687359161017d611867565b6188b860a482013511156105e9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdd61012482013592018212156105e5570196828801358781116105e5576024988136038a8201136105605760288203610564578160141161056057603801357fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008082169160147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec850110610549575b5050905060601c73ffffffffffffffffffffffffffffffffffffffff96878135169082885260209860018a52878920541680156104c85790898c959493928951968780927fd1eca9cf0000000000000000000000000000000000000000000000000000000082528a8c8301525afa9485156104be578995610488575b506102c090611c4f565b9281895260038a52878920546104095782895260028a52878920826000528a52848860002054106103895750865198890152858801526060870152608086015260a085015260a0845260c08401948486109086111761035c5750837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff40949550815284526103516101008301836116f5565b9060e0830152030190f35b604186917f4e487b7100000000000000000000000000000000000000000000000000000000600052526000fd5b867f4465706f7369745061796d61737465723a206465706f73697420746f6f206c6f60849260218f8e8d51957f08c379a00000000000000000000000000000000000000000000000000000000087528601528401528201527f77000000000000000000000000000000000000000000000000000000000000006064820152fd5b867f4465706f7369745061796d61737465723a206465706f736974206e6f74206c6f6084928e8d8c51947f08c379a0000000000000000000000000000000000000000000000000000000008652850152808401528201527f636b6564000000000000000000000000000000000000000000000000000000006064820152fd5b9094508981813d83116104b7575b6104a08183611826565b810103126104b25751936102c06102b6565b600080fd5b503d610496565b88513d8b823e3d90fd5b506084867f4465706f7369745061796d61737465723a20756e737570706f7274656420746f8660238f8e8d51957f08c379a00000000000000000000000000000000000000000000000000000000087528601528401528201527f6b656e00000000000000000000000000000000000000000000000000000000006064820152fd5b91506014819381030160031b1b161680388061023a565b8680fd5b6084857f4465706f7369745061796d61737465723a207061796d6173746572416e6444618560358e60208c51957f08c379a00000000000000000000000000000000000000000000000000000000087528601528401528201527f7461206d757374207370656369667920746f6b656e00000000000000000000006064820152fd5b8580fd5b6084847f4465706f7369745061796d61737465723a2067617320746f6f206c6f7720666f8b60208951937f08c379a0000000000000000000000000000000000000000000000000000000008552840152602860248401528201527f7220706f73744f700000000000000000000000000000000000000000000000006064820152fd5b8380fd5b8280fd5b80fd5b50903461066f5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261066f576106af61162e565b6106b7611764565b73ffffffffffffffffffffffffffffffffffffffff80911691821561072d575060005492827fffffffffffffffffffffffff00000000000000000000000000000000000000008516176000555192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600084a3f35b60849060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b828185817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126108705773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b1561066f57829060248551809481937fb760faf9000000000000000000000000000000000000000000000000000000008352309083015234905af180156108745761086057505051f35b610869906117e3565b6108705751f35b5080fd5b50505051903d90823e3d90fd5b83823461087057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610870576108c633600052600360205260006040812055565b51f35b50829034610870576108da36611695565b919091338552600360205283852054151580610a3c575b156109b95773ffffffffffffffffffffffffffffffffffffffff80831686526002602052848620336000526020528460002061092e838254611c44565b90558451937fa9059cbb0000000000000000000000000000000000000000000000000000000060208601521660248401526044830152604482526080820182811067ffffffffffffffff82111761098b5783526108c691906119bd565b6041867f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b60848660208651917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602960248201527f4465706f7369745061796d61737465723a206d75737420756e6c6f636b546f6b60448201527f656e4465706f73697400000000000000000000000000000000000000000000006064820152fd5b508385205443116108f1565b5082903461087057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610870578051927f70a08231000000000000000000000000000000000000000000000000000000008452309084015260208360248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa918215610b2e5791610afa575b6020925051908152f35b90506020823d8211610b26575b81610b1460209383611826565b810103126104b2576020915190610af0565b3d9150610b07565b9051903d90823e3d90fd5b83823461087057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261087057602091610b7461162e565b82610b7d611672565b9273ffffffffffffffffffffffffffffffffffffffff809316815260028652209116600052825280600020549051908152f35b828185346108705760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261087057610bea61162e565b610bf2611764565b73ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803b15610c7757849283602492885196879586947fc23a5cea00000000000000000000000000000000000000000000000000000000865216908401525af180156108745761086057505051f35b8480fd5b8281853461087057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261087057610cb4611764565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b1561066f57829182918551809481937fbb9fe6bf0000000000000000000000000000000000000000000000000000000083525af180156108745761086057505051f35b83823461087057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610870576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b8382346108705760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610870576020918173ffffffffffffffffffffffffffffffffffffffff9182610df461162e565b168152600185522054169051908152f35b50903461066f5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261066f578035600381101561066b5760249182359167ffffffffffffffff808411610560573660238501121561056057838301359081116105605783013685820111610560578360a091610e84611867565b03126105e557610e95848401611651565b93610ea260448501611651565b9360648101359360a460848301359201359273ffffffffffffffffffffffffffffffffffffffff809816957e01df5959efbba7c2ad51be94be49d853cade78a80d9347cc0a1080436890a5811160011661100357610f06906188b802604435611904565b91827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04841183151516610fd7578415610fad57505002049392839290918590600214610f8257610f599130908461193f565b168452600260205282842090845416600052602052610f7d82600020918254611904565b905551f35b50828216875260026020528587209060005260205284600020610fa6858254611c44565b9055610f59565b60128b917f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6011907f4e487b7100000000000000000000000000000000000000000000000000000000600052526000fd5b506011827f4e487b7100000000000000000000000000000000000000000000000000000000600052526000fd5b83823461087057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610870573382526003602052438183205551f35b83823461087057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126108705773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b83823461087057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261087057602090516188b88152f35b83823461087057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261087057611134611764565b600073ffffffffffffffffffffffffffffffffffffffff8154927fffffffffffffffffffffffff0000000000000000000000000000000000000000841683555192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b50903461066f57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261066f576111d461162e565b6024359173ffffffffffffffffffffffffffffffffffffffff918284168094036105e5578290611202611764565b16918286526001602052848620541661124b575083526001602052818320907fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905551f35b60649060208551917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601160248201527f546f6b656e20616c7265616479207365740000000000000000000000000000006044820152fd5b8382346108705760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610870578060209273ffffffffffffffffffffffffffffffffffffffff6112fa61162e565b1681526003845220549051908152f35b50823461067357817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610673578161134361162e565b9161134c611672565b9273ffffffffffffffffffffffffffffffffffffffff809116825260026020528282209316928360005260205281600020549281526003602052205482519182526020820152f35b50903461066f576113a436611695565b9190926113b38330338561193f565b73ffffffffffffffffffffffffffffffffffffffff809216908187526001602052828688205416156114235750855260026020528385209216918260005260205261140383600020918254611904565b9055331461140e5751f35b6108c633600052600360205260006040812055565b60649060208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601160248201527f756e737570706f7274656420746f6b656e0000000000000000000000000000006044820152fd5b8281853461087057827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610870576114b961162e565b6114c1611764565b73ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803b15610c7757849283604492885196879586947f205c2878000000000000000000000000000000000000000000000000000000008652169084015260243560248401525af180156108745761086057505051f35b50919060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261087057803563ffffffff811680910361066f57611593611764565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691823b1561066b579060248492865194859384927f0396cb6000000000000000000000000000000000000000000000000000000000845283015234905af180156116245761161757509051f35b611620906117e3565b9051f35b83513d84823e3d90fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036104b257565b359073ffffffffffffffffffffffffffffffffffffffff821682036104b257565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036104b257565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126104b25773ffffffffffffffffffffffffffffffffffffffff9060043582811681036104b2579160243590811681036104b2579060443590565b91908251928382526000905b84821061174c5750601f84602094957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0931161173f575b0116010190565b6000858286010152611738565b90602090818082850101519082860101520190611701565b73ffffffffffffffffffffffffffffffffffffffff60005416330361178557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff81116117f757604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176117f757604052565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036118a657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152fd5b81198111611910570190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b9290604051927f23b872dd00000000000000000000000000000000000000000000000000000000602085015273ffffffffffffffffffffffffffffffffffffffff809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff8411176117f7576119bb926040526119bd565b565b73ffffffffffffffffffffffffffffffffffffffff16906040516040810167ffffffffffffffff90828110828211176117f7576040526020938483527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858401526000808587829751910182855af1903d15611b69573d928311611b3c5790611a8493929160405192611a77887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160185611826565b83523d868885013e611b74565b805180611a92575b50505050565b8184918101031261087057820151908115918215036106735750611ab857808080611a8c565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b90611a849392506060915b91929015611bef5750815115611b88575090565b3b15611b915790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b825190915015611c025750805190602001fd5b611c40906040519182917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260248301906116f5565b0390fd5b818110611910570390565b61010060e0820135910135808214611c7457480180821015611c6f575090565b905090565b509056fea26469706673582212204474a7496cc4e4052e03cae0864af8c1d3aa20d9ac554a627bf09ee5828a9c2d64736f6c634300080f0033";

type DepositPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DepositPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DepositPaymaster__factory extends ContractFactory {
  constructor(...args: DepositPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DepositPaymaster> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<DepositPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): DepositPaymaster {
    return super.attach(address) as DepositPaymaster;
  }
  override connect(signer: Signer): DepositPaymaster__factory {
    return super.connect(signer) as DepositPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositPaymasterInterface {
    return new utils.Interface(_abi) as DepositPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DepositPaymaster {
    return new Contract(address, _abi, signerOrProvider) as DepositPaymaster;
  }
}
