/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  NewTouchIdSafeAccountProxyFactory,
  NewTouchIdSafeAccountProxyFactoryInterface,
} from "../NewTouchIdSafeAccountProxyFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract NewTouchIdSafeAccountProxy",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ProxyCreation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createChainSpecificProxyWithNonce",
    outputs: [
      {
        internalType: "contract NewTouchIdSafeAccountProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
      {
        internalType: "contract IProxyCreationCallback",
        name: "callback",
        type: "address",
      },
    ],
    name: "createProxyWithCallback",
    outputs: [
      {
        internalType: "contract NewTouchIdSafeAccountProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createProxyWithNonce",
    outputs: [
      {
        internalType: "contract NewTouchIdSafeAccountProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_salt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_foo",
        type: "uint256",
      },
    ],
    name: "getBytecode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c83806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635abb2d5b1161005b5780635abb2d5b146100e257806381871cbc146100f5578063d18af54d14610108578063ec9e80bb1461011b57600080fd5b80631688f0b9146100825780633408e470146100bf57806353e5d935146100cd575b600080fd5b61009561009036600461083c565b61012e565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6040514681526020016100b6565b6100d56101d2565b6040516100b6919061090f565b6100956100f0366004610929565b61021a565b6100d5610103366004610982565b610382565b6100956101163660046109ae565b610446565b61009561012936600461083c565b610562565b600080838051906020012083604051602001610154929190918252602082015260400190565b604051602081830303815290604052805190602001209050610177858583610594565b6040805173ffffffffffffffffffffffffffffffffffffffff8084168252881660208201529193507f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e235910160405180910390a1509392505050565b6060604051806020016101e490610730565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604052919050565b60008082805190602001208461022d4690565b604080516020810194909452830191909152606082015260800160405160208183030381529060405280519060200120905060006040518060200161027190610730565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f9091011660408190526102c9919073ffffffffffffffffffffffffffffffffffffffff891690602001610a1a565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001815282825280516020918201207fff00000000000000000000000000000000000000000000000000000000000000828501523060601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602185015260358401959095526055808401959095528151808403909501855260759092019052825192019190912095945050505050565b606060006040518060200161039690610730565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081815273ffffffffffffffffffffffffffffffffffffffff8716602083015281018590529091508190606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261042e9291602001610a3c565b60405160208183030381529060405291505092915050565b600080838360405160200161048a92919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b6040516020818303038152906040528051906020012060001c90506104b086868361012e565b915073ffffffffffffffffffffffffffffffffffffffff831615610559576040517f1e52b51800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690631e52b518906105269085908a908a908a90600401610a6b565b600060405180830381600087803b15801561054057600080fd5b505af1158015610554573d6000803e3d6000fd5b505050505b50949350505050565b6000808380519060200120836105754690565b6040805160208101949094528301919091526060820152608001610154565b6000833b610603576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53696e676c65746f6e20636f6e7472616374206e6f74206465706c6f7965640060448201526064015b60405180910390fd5b60006040518060200161061590610730565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081905261066d919073ffffffffffffffffffffffffffffffffffffffff881690602001610a1a565b6040516020818303038152906040529050828151826020016000f5915073ffffffffffffffffffffffffffffffffffffffff8216610707576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f437265617465322063616c6c206661696c65640000000000000000000000000060448201526064016105fa565b8351156107285760008060008651602088016000875af10361072857600080fd5b509392505050565b61019880610ab683390190565b73ffffffffffffffffffffffffffffffffffffffff8116811461075f57600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126107a257600080fd5b813567ffffffffffffffff808211156107bd576107bd610762565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561080357610803610762565b8160405283815286602085880101111561081c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561085157600080fd5b833561085c8161073d565b9250602084013567ffffffffffffffff81111561087857600080fd5b61088486828701610791565b925050604084013590509250925092565b60005b838110156108b0578181015183820152602001610898565b838111156108bf576000848401525b50505050565b600081518084526108dd816020860160208601610895565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061092260208301846108c5565b9392505050565b60008060006060848603121561093e57600080fd5b83356109498161073d565b925060208401359150604084013567ffffffffffffffff81111561096c57600080fd5b61097886828701610791565b9150509250925092565b6000806040838503121561099557600080fd5b82356109a08161073d565b946020939093013593505050565b600080600080608085870312156109c457600080fd5b84356109cf8161073d565b9350602085013567ffffffffffffffff8111156109eb57600080fd5b6109f787828801610791565b935050604085013591506060850135610a0f8161073d565b939692955090935050565b60008351610a2c818460208801610895565b9190910191825250602001919050565b60008351610a4e818460208801610895565b835190830190610a62818360208801610895565b01949350505050565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525060806040830152610aa460808301856108c5565b90508260608301529594505050505056fe608060405234801561001057600080fd5b5060405161019838038061019883398101604081905261002f916100b9565b6001600160a01b0381166100945760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100e9565b6000602082840312156100cb57600080fd5b81516001600160a01b03811681146100e257600080fd5b9392505050565b60a1806100f76000396000f3fe6080604052600073ffffffffffffffffffffffffffffffffffffffff8154167fa619486e00000000000000000000000000000000000000000000000000000000823503604d57808252602082f35b3682833781823684845af490503d82833e806066573d82fd5b503d81f3fea2646970667358221220f624ff846618949eae2a822b626190c78b33d7c4c840566ce24e34afa9870b6864736f6c634300080f0033a26469706673582212200b5cf6f102ae8232710c4b5f2b87882e66d17850cc8c869a6bc4a213d7e90f3864736f6c634300080f0033";

type NewTouchIdSafeAccountProxyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NewTouchIdSafeAccountProxyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NewTouchIdSafeAccountProxyFactory__factory extends ContractFactory {
  constructor(...args: NewTouchIdSafeAccountProxyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NewTouchIdSafeAccountProxyFactory> {
    return super.deploy(
      overrides || {}
    ) as Promise<NewTouchIdSafeAccountProxyFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NewTouchIdSafeAccountProxyFactory {
    return super.attach(address) as NewTouchIdSafeAccountProxyFactory;
  }
  override connect(signer: Signer): NewTouchIdSafeAccountProxyFactory__factory {
    return super.connect(signer) as NewTouchIdSafeAccountProxyFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NewTouchIdSafeAccountProxyFactoryInterface {
    return new utils.Interface(
      _abi
    ) as NewTouchIdSafeAccountProxyFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NewTouchIdSafeAccountProxyFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NewTouchIdSafeAccountProxyFactory;
  }
}
