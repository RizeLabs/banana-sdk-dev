/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  NewTouchIdSafeAccountProxyFactory,
  NewTouchIdSafeAccountProxyFactoryInterface,
} from "../NewTouchIdSafeAccountProxyFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract NewTouchIdSafeAccountProxy",
        name: "proxy",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ProxyCreation",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createChainSpecificProxyWithNonce",
    outputs: [
      {
        internalType: "contract NewTouchIdSafeAccountProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
      {
        internalType: "contract IProxyCreationCallback",
        name: "callback",
        type: "address",
      },
    ],
    name: "createProxyWithCallback",
    outputs: [
      {
        internalType: "contract NewTouchIdSafeAccountProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_singleton",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "initializer",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "saltNonce",
        type: "uint256",
      },
    ],
    name: "createProxyWithNonce",
    outputs: [
      {
        internalType: "contract NewTouchIdSafeAccountProxy",
        name: "proxy",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyCreationCode",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610967806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806353e5d9351161005057806353e5d935146100b7578063d18af54d146100cc578063ec9e80bb146100df57600080fd5b80631688f0b91461006c5780633408e470146100a9575b600080fd5b61007f61007a3660046105d4565b6100f2565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6040514681526020016100a0565b6100bf610196565b6040516100a091906106a7565b61007f6100da3660046106c1565b6101de565b61007f6100ed3660046105d4565b6102fa565b600080838051906020012083604051602001610118929190918252602082015260400190565b60405160208183030381529060405280519060200120905061013b85858361032c565b6040805173ffffffffffffffffffffffffffffffffffffffff8084168252881660208201529193507f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e235910160405180910390a1509392505050565b6060604051806020016101a8906104c8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604052919050565b600080838360405160200161022292919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b6040516020818303038152906040528051906020012060001c90506102488686836100f2565b915073ffffffffffffffffffffffffffffffffffffffff8316156102f1576040517f1e52b51800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690631e52b518906102be9085908a908a908a9060040161072d565b600060405180830381600087803b1580156102d857600080fd5b505af11580156102ec573d6000803e3d6000fd5b505050505b50949350505050565b60008083805190602001208361030d4690565b6040805160208101949094528301919091526060820152608001610118565b6000833b61039b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53696e676c65746f6e20636f6e7472616374206e6f74206465706c6f7965640060448201526064015b60405180910390fd5b6000604051806020016103ad906104c8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f909101166040819052610405919073ffffffffffffffffffffffffffffffffffffffff881690602001610777565b6040516020818303038152906040529050828151826020016000f5915073ffffffffffffffffffffffffffffffffffffffff821661049f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f437265617465322063616c6c206661696c6564000000000000000000000000006044820152606401610392565b8351156104c05760008060008651602088016000875af1036104c057600080fd5b509392505050565b6101988061079a83390190565b73ffffffffffffffffffffffffffffffffffffffff811681146104f757600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261053a57600080fd5b813567ffffffffffffffff80821115610555576105556104fa565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561059b5761059b6104fa565b816040528381528660208588010111156105b457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156105e957600080fd5b83356105f4816104d5565b9250602084013567ffffffffffffffff81111561061057600080fd5b61061c86828701610529565b925050604084013590509250925092565b60005b83811015610648578181015183820152602001610630565b83811115610657576000848401525b50505050565b6000815180845261067581602086016020860161062d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006106ba602083018461065d565b9392505050565b600080600080608085870312156106d757600080fd5b84356106e2816104d5565b9350602085013567ffffffffffffffff8111156106fe57600080fd5b61070a87828801610529565b935050604085013591506060850135610722816104d5565b939692955090935050565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525060806040830152610766608083018561065d565b905082606083015295945050505050565b6000835161078981846020880161062d565b919091019182525060200191905056fe608060405234801561001057600080fd5b5060405161019838038061019883398101604081905261002f916100b9565b6001600160a01b0381166100945760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100e9565b6000602082840312156100cb57600080fd5b81516001600160a01b03811681146100e257600080fd5b9392505050565b60a1806100f76000396000f3fe6080604052600073ffffffffffffffffffffffffffffffffffffffff8154167fa619486e00000000000000000000000000000000000000000000000000000000823503604d57808252602082f35b3682833781823684845af490503d82833e806066573d82fd5b503d81f3fea2646970667358221220f624ff846618949eae2a822b626190c78b33d7c4c840566ce24e34afa9870b6864736f6c634300080f0033a264697066735822122064ee13a5ebc095737d0700cd3063912f5b4873257b5f96ce7b7e51ef871d5d0364736f6c634300080f0033";

type NewTouchIdSafeAccountProxyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NewTouchIdSafeAccountProxyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NewTouchIdSafeAccountProxyFactory__factory extends ContractFactory {
  constructor(...args: NewTouchIdSafeAccountProxyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NewTouchIdSafeAccountProxyFactory> {
    return super.deploy(
      overrides || {}
    ) as Promise<NewTouchIdSafeAccountProxyFactory>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NewTouchIdSafeAccountProxyFactory {
    return super.attach(address) as NewTouchIdSafeAccountProxyFactory;
  }
  override connect(signer: Signer): NewTouchIdSafeAccountProxyFactory__factory {
    return super.connect(signer) as NewTouchIdSafeAccountProxyFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NewTouchIdSafeAccountProxyFactoryInterface {
    return new utils.Interface(
      _abi
    ) as NewTouchIdSafeAccountProxyFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NewTouchIdSafeAccountProxyFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NewTouchIdSafeAccountProxyFactory;
  }
}
