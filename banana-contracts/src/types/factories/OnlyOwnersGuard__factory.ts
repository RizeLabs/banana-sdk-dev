/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  OnlyOwnersGuard,
  OnlyOwnersGuardInterface,
} from "../OnlyOwnersGuard";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "checkAfterExecution",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "checkTransaction",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safe",
    outputs: [
      {
        internalType: "contract ISafe",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610742806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806301ffc9a71461004e578063186f03541461007657806375f0bb52146100bb57806393271368146100ce575b005b61006161005c366004610319565b6100e0565b60405190151581526020015b60405180910390f35b6000546100969073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161006d565b61004c6100c93660046104b2565b610179565b61004c6100dc366004610597565b5050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fe6d7a83a00000000000000000000000000000000000000000000000000000000148061017357507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60003373ffffffffffffffffffffffffffffffffffffffff1663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101c6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261020c91908101906105cc565b905060005b815181101561027f578273ffffffffffffffffffffffffffffffffffffffff168282815181106102435761024361067e565b602002602001015173ffffffffffffffffffffffffffffffffffffffff160361026d57505061030c565b80610277816106ad565b915050610211565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f6d73672073656e646572206973206e6f7420616c6c6f77656420746f2065786560448201527f6300000000000000000000000000000000000000000000000000000000000000606482015260840160405180910390fd5b5050505050505050505050565b60006020828403121561032b57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461035b57600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461038457600080fd5b50565b803561039281610362565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561040d5761040d610397565b604052919050565b600082601f83011261042657600080fd5b813567ffffffffffffffff81111561044057610440610397565b61047160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016103c6565b81815284602083860101111561048657600080fd5b816020850160208301376000918101602001919091529392505050565b80356002811061039257600080fd5b60008060008060008060008060008060006101608c8e0312156104d457600080fd5b6104dd8c610387565b9a5060208c0135995067ffffffffffffffff8060408e0135111561050057600080fd5b6105108e60408f01358f01610415565b995061051e60608e016104a3565b985060808d0135975060a08d0135965060c08d0135955061054160e08e01610387565b94506105506101008e01610387565b9350806101208e0135111561056457600080fd5b506105768d6101208e01358e01610415565b91506105856101408d01610387565b90509295989b509295989b9093969950565b600080604083850312156105aa57600080fd5b82359150602083013580151581146105c157600080fd5b809150509250929050565b600060208083850312156105df57600080fd5b825167ffffffffffffffff808211156105f757600080fd5b818501915085601f83011261060b57600080fd5b81518181111561061d5761061d610397565b8060051b915061062e8483016103c6565b818152918301840191848101908884111561064857600080fd5b938501935b83851015610672578451925061066283610362565b828252938501939085019061064d565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610705577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea264697066735822122043f00ba53de04bd0e451368129291754dfefb9e9bb1ee5a1e203b71ed0981a1364736f6c634300080f0033";

type OnlyOwnersGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OnlyOwnersGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OnlyOwnersGuard__factory extends ContractFactory {
  constructor(...args: OnlyOwnersGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OnlyOwnersGuard> {
    return super.deploy(overrides || {}) as Promise<OnlyOwnersGuard>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): OnlyOwnersGuard {
    return super.attach(address) as OnlyOwnersGuard;
  }
  override connect(signer: Signer): OnlyOwnersGuard__factory {
    return super.connect(signer) as OnlyOwnersGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OnlyOwnersGuardInterface {
    return new utils.Interface(_abi) as OnlyOwnersGuardInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnlyOwnersGuard {
    return new Contract(address, _abi, signerOrProvider) as OnlyOwnersGuard;
  }
}
