/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TokenCallbackHandler,
  TokenCallbackHandlerInterface,
} from "../TokenCallbackHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576104ab908161001c8239f35b600080fdfe60808060405260048036101561001457600080fd5b600091823560e01c90816223de291461032b57816301ffc9a71461023d57508063150b7a02146101b0578063bc197c81146100ec5763f23a6e611461005857600080fd5b346100e85760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e85761008f6103cb565b506100986103f3565b5060843567ffffffffffffffff81116100e4576100b89250369101610416565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b8280fd5b5080fd5b50346100e85760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e8576101246103cb565b5061012d6103f3565b5067ffffffffffffffff6044358181116101ac5761014e9036908401610444565b50506064358181116101ac576101679036908401610444565b50506084359081116100e4576101809250369101610416565b505060206040517fbc197c81000000000000000000000000000000000000000000000000000000008152f35b8380fd5b50346100e85760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e8576101e86103cb565b506101f16103f3565b5060643567ffffffffffffffff81116100e4576102119250369101610416565b505060206040517f150b7a02000000000000000000000000000000000000000000000000000000008152f35b919050346100e45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e457357fffffffff0000000000000000000000000000000000000000000000000000000081168091036100e457602092507f150b7a02000000000000000000000000000000000000000000000000000000008114908115610301575b81156102d7575b5015158152f35b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014386102d0565b7f4e2312e000000000000000000000000000000000000000000000000000000000811491506102c9565b5050346100e85760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126100e8576103646103cb565b5061036d6103f3565b5060443573ffffffffffffffffffffffffffffffffffffffff8116036100e85767ffffffffffffffff906084358281116101ac576103ae9036908301610416565b505060a4359182116100e4576103c691369101610416565b505080f35b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103ee57565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff821682036103ee57565b9181601f840112156103ee5782359167ffffffffffffffff83116103ee57602083818601950101116103ee57565b9181601f840112156103ee5782359167ffffffffffffffff83116103ee576020808501948460051b0101116103ee5756fea26469706673582212201fdedfb8820142d015348c3c9cfeffd9fad353ae8dcccc13f9373ec5099de0da64736f6c63430008110033";

type TokenCallbackHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenCallbackHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenCallbackHandler__factory extends ContractFactory {
  constructor(...args: TokenCallbackHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenCallbackHandler> {
    return super.deploy(overrides || {}) as Promise<TokenCallbackHandler>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TokenCallbackHandler {
    return super.attach(address) as TokenCallbackHandler;
  }
  override connect(signer: Signer): TokenCallbackHandler__factory {
    return super.connect(signer) as TokenCallbackHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenCallbackHandlerInterface {
    return new utils.Interface(_abi) as TokenCallbackHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenCallbackHandler {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TokenCallbackHandler;
  }
}
