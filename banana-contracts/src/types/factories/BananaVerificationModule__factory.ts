/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BananaVerificationModule,
  BananaVerificationModuleInterface,
} from "../BananaVerificationModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "toHex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001a5761041c9081610020823930815050f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c6349e894d81461002857600080fd5b602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610172576004356100907fffffffffffffffffffffffffffffffff00000000000000000000000000000000610086818416610175565b9260801b16610175565b604051917f3078000000000000000000000000000000000000000000000000000000000000858401526022830152604282015260428152608081019181831067ffffffffffffffff84111761014557826040528383528151938460a0840152815b85811061013157846040857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8a8860c0828601015201168101030190f35b808291850160c083820151910152016100f1565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526041600452fd5b80fd5b8060401c907fffffffff000000000000000000000000000000000000000000000000000000006fffffffff0000000000000000000000006bffffffff000000000000000084167bffffffff00000000000000000000000000000000000000000000000084161760201c9316911617178060101c907fff00000000000000ff00000000000000ff00000000000000ff000000000000007bff00000000000000ff00000000000000ff00000000000000ff0000007aff00000000000000ff00000000000000ff00000000000000ff000084167eff00000000000000ff00000000000000ff00000000000000ff00000000000084161760081c9316911617176004907f0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f007e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f8260081c1691831c1617907f3030303030303030303030303030303030303030303030303030303030303030828101928382116103b8577f0606060606060606060606060606060606060606060606060606060606060606810180821161038a577f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f90841c169060078202918083046007149015171561038a57010180921161035c575090565b6011907f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b6011847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b6011837f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fdfea26469706673582212202f41b03a68980e1d1d7c551fdef0a62a586e297db32b488fdb5cd1760a786d8164736f6c63430008110033";

type BananaVerificationModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BananaVerificationModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BananaVerificationModule__factory extends ContractFactory {
  constructor(...args: BananaVerificationModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BananaVerificationModule> {
    return super.deploy(overrides || {}) as Promise<BananaVerificationModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BananaVerificationModule {
    return super.attach(address) as BananaVerificationModule;
  }
  override connect(signer: Signer): BananaVerificationModule__factory {
    return super.connect(signer) as BananaVerificationModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BananaVerificationModuleInterface {
    return new utils.Interface(_abi) as BananaVerificationModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BananaVerificationModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BananaVerificationModule;
  }
}
