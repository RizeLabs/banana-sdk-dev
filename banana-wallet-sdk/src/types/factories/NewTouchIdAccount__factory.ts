/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  NewTouchIdAccount,
  NewTouchIdAccountInterface,
} from "../NewTouchIdAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "execBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execFromEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
      {
        internalType: "uint256[2]",
        name: "_qValues",
        type: "uint256[2]",
      },
      {
        internalType: "address",
        name: "_ellipticCurve",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c03461015a57601f620020c138819003918201601f19168301916001600160401b0383118484101761015f5780849260209460405283398101031261015a57516001600160a01b038116810361015a573060805260a05260005460ff8160081c166101055760ff808216106100ca575b604051611f4b90816200017682396080518181816102e801528181610b690152610c13015260a05181818161050a01528181610802015281816108f10152818161105e0152818161111d01528181611c3a0152611caf0152f35b60ff90811916176000557f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498602060405160ff8152a138610070565b60405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b6064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806318dfb3c71461015b5780633659cfe6146101525780633a871cdd146101495780633ef91dfb146101405780634a58db19146101375780634d44560d1461012e5780634f1ef2861461012557806352d1902d1461011c57806378cf75d71461011357806380c5c7d01461010a5780638da5cb5b14610101578063affed0e0146100f8578063b0d691fe146100ef578063b61d27f6146100e6578063c399ec88146100dd5763d0cb75fa0361000e576100d86111a0565b61000e565b506100d86110a3565b506100d8611082565b506100d8611012565b506100d8610fc7565b506100d8610f87565b506100d8610f61565b506100d8610d6e565b506100d8610bcc565b506100d8610ae1565b506100d8610892565b506100d86107bf565b506100d8610694565b506100d861049f565b506100d8610293565b506100d8610203565b9181601f840112156101955782359167ffffffffffffffff8311610195576020808501948460051b01011161019557565b600080fd5b60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126101955767ffffffffffffffff9160043583811161019557826101e591600401610164565b93909392602435918211610195576101ff91600401610164565b9091565b5034610195576102123661019a565b91929061021d611c98565b610228838514611a27565b60005b84811061023457005b8061026b610246610270938887611af6565b3561025081610275565b61026561025e848988611984565b3691610aaa565b90611ed6565b611abc565b61022b565b73ffffffffffffffffffffffffffffffffffffffff81160361019557565b50346101955760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610195576004356102cf81610275565b73ffffffffffffffffffffffffffffffffffffffff90817f00000000000000000000000000000000000000000000000000000000000000001691610315833014156111e8565b6103447f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc938285541614611273565b61034c6119aa565b60405190610359826109bd565b600082527f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610393575050610019915061150c565b6020600491604094939451928380927f52d1902d00000000000000000000000000000000000000000000000000000000825286165afa6000918161046f575b5061045c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b6100199361046a911461131a565b6115f8565b61049191925060203d8111610498575b6104898183610a11565b8101906112fe565b90386103d2565b503d61047f565b5034610195577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6060813601126101955760043567ffffffffffffffff811161019557610160816004019282360301126101955773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036106365761054761053c83611dc8565b9260448301906118a9565b905015610572575b61056e8261055e6044356118fa565b6040519081529081906020820190565b0390f35b6024600154916bffffffffffffffffffffffff927fffffffffffffffffffffffffffffffffffffffff00000000000000000000000084821694808614610629575b60018601169116176001550135036105cb573861054f565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6163636f756e743a20696e76616c6964206e6f6e6365000000000000000000006044820152fd5b610631611a8c565b6105b3565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152fd5b50346101955760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610195576004356106d081610275565b60443567ffffffffffffffff8111610195576106f0903690600401610164565b6106fb9291926119aa565b80600110156107b2575b602092610714848201826118a9565b810190610140818303126101955761072c8282610d29565b5081605f82011215610195576040958651610746816109d9565b60c083019184831161019557888401915b83831061079a5760008a6107978b61078d61025e8d8d6107878e6101008f8f8361078091610d29565b5001610d29565b50611967565b9060243590611efe565b51f35b818a916107a78886610d29565b815201920191610757565b6107ba611937565b610705565b506000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261088f5773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681813b1561088f57602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af18015610882575b610873575b50604051f35b61087c9061099c565b3861086d565b61088a61130d565b610868565b80fd5b503461019557600060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261088f576004356108d081610275565b6108d86119aa565b8173ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001692833b15610968576044908360405195869485937f205c287800000000000000000000000000000000000000000000000000000000855216600484015260243560248401525af18015610882576108735750604051f35b8280fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff81116109b057604052565b6109b861096c565b604052565b6020810190811067ffffffffffffffff8211176109b057604052565b6040810190811067ffffffffffffffff8211176109b057604052565b6060810190811067ffffffffffffffff8211176109b057604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176109b057604052565b60405190610a5f826109d9565b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209267ffffffffffffffff8111610a9d575b01160190565b610aa561096c565b610a97565b929192610ab682610a61565b91610ac46040519384610a11565b829481845281830111610195578281602093846000960137010152565b5060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019557600435610b1881610275565b6024359067ffffffffffffffff8211610195573660238301121561019557610b4d610019923690602481600401359101610aaa565b90610bbf73ffffffffffffffffffffffffffffffffffffffff807f00000000000000000000000000000000000000000000000000000000000000001690610b96823014156111e8565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614611273565b610bc76119aa565b6113a5565b50346101955760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101955773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610c64576040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152602090f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152fd5b80604312156101955760405190610cfe826109d9565b816064918211610195576024905b828210610d195750505090565b8135815260209182019101610d0c565b9080601f830112156101955760405191610d42836109d9565b82906040810192831161019557905b828210610d5e5750505090565b8135815260209182019101610d51565b50346101955760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019557600435610daa81610275565b610e22610db636610ce8565b60643590610dc382610275565b60005493610de860ff8660081c161580968197610eda575b8115610eba575b50611b14565b84610e1960017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006000541617600055565b610e8457611b9f565b610e2857005b610e557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff60005416600055565b604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890602090a1005b610eb56101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6000541617600055565b611b9f565b303b15915081610ecc575b5038610de2565b6001915060ff161438610ec5565b600160ff8216109150610ddb565b9060607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc83011261019557600435610f1f81610275565b916024359160443567ffffffffffffffff9283821161019557806023830112156101955781600401359384116101955760248483010111610195576024019190565b503461019557610019610f81610f7636610ee8565b939192933691610aaa565b91611efe565b50346101955760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019557602060015460601c604051908152f35b50346101955760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101955760206bffffffffffffffffffffffff60015416604051908152f35b50346101955760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019557602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461019557610019610f8161109736610ee8565b61025e94929394611c98565b5034610195576000807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261088f576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa908115611193575b8291611159575b604051828152602090f35b90506020813d821161118b575b8161117360209383610a11565b810103126111875761056e9150513861114e565b5080fd5b3d9150611166565b61119b61130d565b611147565b5034610195576111af3661019a565b9192906111ba6119aa565b6111c5838514611a27565b60005b8481106111d157005b8061026b6102466111e3938887611af6565b6111c8565b156111ef57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152fd5b1561127a57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152fd5b90816020910312610195575190565b506040513d6000823e3d90fd5b1561132157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152fd5b906113d17f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1690565b156113e05750610a5f9061150c565b604051917f52d1902d00000000000000000000000000000000000000000000000000000000835260208360048173ffffffffffffffffffffffffffffffffffffffff85165afa600093816114ec575b506114b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608490fd5b6114e77f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610a5f941461131a565b6116d7565b61150591945060203d8111610498576104898183610a11565b923861142f565b803b156115745773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc91167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b6116018161150c565b6040519073ffffffffffffffffffffffffffffffffffffffff81167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600084a28251158015906116cf575b61165557505050565b6000806116cc94611665856109f5565b602785527f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208601527f206661696c6564000000000000000000000000000000000000000000000000006040860152602081519101845af46116c661173b565b916117d0565b50565b50600061164c565b6116e08161150c565b6040519073ffffffffffffffffffffffffffffffffffffffff81167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600084a28251158015906117335761165557505050565b50600161164c565b3d15611766573d9061174c82610a61565b9161175a6040519384610a11565b82523d6000602084013e565b606090565b1561177257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156117f357508151156117e4575090565b6117f0903b151561176b565b90565b8251909150156118065750805190602001fd5b604051907f08c379a00000000000000000000000000000000000000000000000000000000082528160208060048301528251928360248401526000915b848310611890575050601f836044947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09311611883575b01168101030190fd5b600085828601015261187a565b8183018101518684016044015285935091820191611843565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610195570180359067ffffffffffffffff82116101955760200191813603831361019557565b806119025750565b600080809260405190337ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1506116cc61173b565b507f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6101ff9115611977575b806118a9565b61197f611937565b611971565b90916101ff9281101561199d575b60051b8101906118a9565b6119a5611937565b611992565b60015460601c33148015611a1e575b156119c057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152fd5b503033146119b9565b15611a2e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f77726f6e67206172726179206c656e67746873000000000000000000000000006044820152fd5b507f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611aea570190565b611af2611a8c565b0190565b9190811015611b07575b60051b0190565b611b0f611937565b611b00565b15611b1b57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152fd5b906001916bffffffffffffffffffffffff7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000084549260601b16911617825560029081836000925b848410611c8357505050505073ffffffffffffffffffffffffffffffffffffffff8092167fffffffffffffffffffffffff000000000000000000000000000000000000000060045416176004555460601c907f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de6000604051a3565b80518355928101929101908490602001611be6565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633148015611d3d575b15611cdf57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b5060015460601c3314611cd8565b90816020910312610195575180151581036101955790565b90815260a081019291602091906000838084015b60028310611db15750505050606001600291826000925b848410611d9c575050505050565b60018381928454815201920193019290611d8e565b908060019285518152019301910190918490611d77565b611dd96060916101408101906118a9565b9080929181010312610195576020611e7791611e29611e10611e1060045473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b6040611e33610a52565b928035845284810135858501528151958694859384937f04e960d7000000000000000000000000000000000000000000000000000000008552013560048401611d63565b03915afa908115611ec9575b600091611e9b575b5015611e9657600090565b600190565b611ebc915060203d8111611ec2575b611eb48183610a11565b810190611d4b565b38611e8b565b503d611eaa565b611ed161130d565b611e83565b600091829182602083519301915af1611eed61173b565b9015611ef65750565b602081519101fd5b916000928392602083519301915af1611eed61173b56fea2646970667358221220c5d093b96231755efd4a4c32d7f06a023c3a445655799eda98ad8f3609ff949864736f6c634300080f0033";

type NewTouchIdAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NewTouchIdAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NewTouchIdAccount__factory extends ContractFactory {
  constructor(...args: NewTouchIdAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NewTouchIdAccount> {
    return super.deploy(
      anEntryPoint,
      overrides || {}
    ) as Promise<NewTouchIdAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  override attach(address: string): NewTouchIdAccount {
    return super.attach(address) as NewTouchIdAccount;
  }
  override connect(signer: Signer): NewTouchIdAccount__factory {
    return super.connect(signer) as NewTouchIdAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NewTouchIdAccountInterface {
    return new utils.Interface(_abi) as NewTouchIdAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NewTouchIdAccount {
    return new Contract(address, _abi, signerOrProvider) as NewTouchIdAccount;
  }
}
