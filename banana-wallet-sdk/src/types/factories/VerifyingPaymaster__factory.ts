/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  VerifyingPaymaster,
  VerifyingPaymasterInterface,
} from "../VerifyingPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "paymasterAndData",
        type: "bytes",
      },
    ],
    name: "parsePaymasterAndData",
    outputs: [
      {
        internalType: "uint48",
        name: "validUntil",
        type: "uint48",
      },
      {
        internalType: "uint48",
        name: "validAfter",
        type: "uint48",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "senderNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200239138038062002391833981810160405281019062000037919062000244565b81620000586200004c620000c960201b60201c565b620000d160201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505050506200028b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001c7826200019a565b9050919050565b6000620001db82620001ba565b9050919050565b620001ed81620001ce565b8114620001f957600080fd5b50565b6000815190506200020d81620001e2565b92915050565b6200021e81620001ba565b81146200022a57600080fd5b50565b6000815190506200023e8162000213565b92915050565b600080604083850312156200025e576200025d62000195565b5b60006200026e85828601620001fc565b925050602062000281858286016200022d565b9150509250929050565b60805160a0516120a8620002e9600039600081816104c60152610d0101526000818161039e01528181610435015281816106330152818161065f015281816106e901528181610779015281816108180152610ae001526120a86000f3fe6080604052600436106100f35760003560e01c8063a9a234091161008a578063c399ec8811610059578063c399ec88146102f8578063d0e30db014610323578063f2fde38b1461032d578063f465c77e14610356576100f3565b8063a9a2340914610264578063b0d691fe1461028d578063bb9fe6bf146102b8578063c23a5cea146102cf576100f3565b80638da5cb5b116100c65780638da5cb5b1461017f57806394d4ad60146101aa57806394e1fc19146101ea5780639c90b44314610227576100f3565b80630396cb60146100f8578063205c28781461011457806323d9ac9b1461013d578063715018a614610168575b600080fd5b610112600480360381019061010d919061119c565b610394565b005b34801561012057600080fd5b5061013b6004803603810190610136919061125d565b61042b565b005b34801561014957600080fd5b506101526104c4565b60405161015f91906112be565b60405180910390f35b34801561017457600080fd5b5061017d6104e8565b005b34801561018b57600080fd5b506101946104fc565b6040516101a191906112be565b60405180910390f35b3480156101b657600080fd5b506101d160048036038101906101cc919061133e565b610525565b6040516101e1949392919061140a565b60405180910390f35b3480156101f657600080fd5b50610211600480360381019061020c919061149b565b610574565b60405161021e9190611523565b60405180910390f35b34801561023357600080fd5b5061024e6004803603810190610249919061156a565b6105ff565b60405161025b91906115a6565b60405180910390f35b34801561027057600080fd5b5061028b600480360381019061028691906115e6565b610617565b005b34801561029957600080fd5b506102a2610631565b6040516102af91906116b9565b60405180910390f35b3480156102c457600080fd5b506102cd610655565b005b3480156102db57600080fd5b506102f660048036038101906102f191906116d4565b6106df565b005b34801561030457600080fd5b5061030d610775565b60405161031a91906115a6565b60405180910390f35b61032b610816565b005b34801561033957600080fd5b50610354600480360381019061034f919061156a565b6108a4565b005b34801561036257600080fd5b5061037d6004803603810190610378919061172d565b610927565b60405161038b92919061180a565b60405180910390f35b61039c61094a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630396cb6034836040518363ffffffff1660e01b81526004016103f69190611849565b6000604051808303818588803b15801561040f57600080fd5b505af1158015610423573d6000803e3d6000fd5b505050505050565b61043361094a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663205c287883836040518363ffffffff1660e01b815260040161048e929190611873565b600060405180830381600087803b1580156104a857600080fd5b505af11580156104bc573d6000803e3d6000fd5b505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6104f061094a565b6104fa60006109c8565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080366000858560149060549261053f939291906118a6565b81019061054c91906118e1565b809450819550505085856054908092610567939291906118a6565b9150915092959194509250565b600061057f84610a8c565b46306001600061058e89610ace565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205486866040516020016105e096959493929190611921565b6040516020818303038152906040528051906020012090509392505050565b60016020528060005260406000206000915090505481565b61061f610ade565b61062b84848484610b6e565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61065d61094a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106c557600080fd5b505af11580156106d9573d6000803e3d6000fd5b50505050565b6106e761094a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c23a5cea826040518263ffffffff1660e01b81526004016107409190611989565b600060405180830381600087803b15801561075a57600080fd5b505af115801561076e573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107d091906112be565b602060405180830381865afa1580156107ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081191906119b9565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b760faf934306040518363ffffffff1660e01b815260040161087091906112be565b6000604051808303818588803b15801561088957600080fd5b505af115801561089d573d6000803e3d6000fd5b5050505050565b6108ac61094a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361091b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091290611a69565b60405180910390fd5b610924816109c8565b50565b60606000610933610ade565b61093e858585610ba9565b91509150935093915050565b610952610d95565b73ffffffffffffffffffffffffffffffffffffffff166109706104fc565b73ffffffffffffffffffffffffffffffffffffffff16146109c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bd90611ad5565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b606036600083806101200190610aa29190611b04565b915091508360208184030360405194506020810185016040528085528082602087013750505050919050565b6000808235905080915050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6390611bb3565b60405180910390fd5b565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba090611c1f565b60405180910390fd5b606060008080366000610bcb89806101200190610bc69190611b04565b610525565b93509350935093506040828290501480610be85750604182829050145b610c27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1e90611cb1565b60405180910390fd5b6000610c3c610c378b8787610574565b610d9d565b905060016000610c4b8c610ace565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610c9690611d00565b9190505550610ce98184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dcd565b73ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610d6657610d4760018686610df4565b6040518060200160405280600081525090965096505050505050610d8d565b610d7260008686610df4565b60405180602001604052806000815250909650965050505050505b935093915050565b600033905090565b600081604051602001610db09190611dc0565b604051602081830303815290604052805190602001209050919050565b6000806000610ddc8585610e2d565b91509150610de981610e7e565b819250505092915050565b600060d08265ffffffffffff16901b60a08465ffffffffffff16901b85610e1c576000610e1f565b60015b60ff16171790509392505050565b6000806041835103610e6e5760008060006020860151925060408601519150606086015160001a9050610e628782858561104a565b94509450505050610e77565b60006002915091505b9250929050565b60006004811115610e9257610e91611de6565b5b816004811115610ea557610ea4611de6565b5b03156110475760016004811115610ebf57610ebe611de6565b5b816004811115610ed257610ed1611de6565b5b03610f12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0990611e61565b60405180910390fd5b60026004811115610f2657610f25611de6565b5b816004811115610f3957610f38611de6565b5b03610f79576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7090611ecd565b60405180910390fd5b60036004811115610f8d57610f8c611de6565b5b816004811115610fa057610f9f611de6565b5b03610fe0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd790611f5f565b60405180910390fd5b600480811115610ff357610ff2611de6565b5b81600481111561100657611005611de6565b5b03611046576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103d90611ff1565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c111561108557600060039150915061114d565b601b8560ff161415801561109d5750601c8560ff1614155b156110af57600060049150915061114d565b6000600187878787604051600081526020016040526040516110d4949392919061202d565b6020604051602081039080840390855afa1580156110f6573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111445760006001925092505061114d565b80600092509250505b94509492505050565b600080fd5b600080fd5b600063ffffffff82169050919050565b61117981611160565b811461118457600080fd5b50565b60008135905061119681611170565b92915050565b6000602082840312156111b2576111b1611156565b5b60006111c084828501611187565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111f4826111c9565b9050919050565b611204816111e9565b811461120f57600080fd5b50565b600081359050611221816111fb565b92915050565b6000819050919050565b61123a81611227565b811461124557600080fd5b50565b60008135905061125781611231565b92915050565b6000806040838503121561127457611273611156565b5b600061128285828601611212565b925050602061129385828601611248565b9150509250929050565b60006112a8826111c9565b9050919050565b6112b88161129d565b82525050565b60006020820190506112d360008301846112af565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126112fe576112fd6112d9565b5b8235905067ffffffffffffffff81111561131b5761131a6112de565b5b602083019150836001820283011115611337576113366112e3565b5b9250929050565b6000806020838503121561135557611354611156565b5b600083013567ffffffffffffffff8111156113735761137261115b565b5b61137f858286016112e8565b92509250509250929050565b600065ffffffffffff82169050919050565b6113a68161138b565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006113e983856113ac565b93506113f68385846113bd565b6113ff836113cc565b840190509392505050565b600060608201905061141f600083018761139d565b61142c602083018661139d565b818103604083015261143f8184866113dd565b905095945050505050565b600080fd5b600061016082840312156114665761146561144a565b5b81905092915050565b6114788161138b565b811461148357600080fd5b50565b6000813590506114958161146f565b92915050565b6000806000606084860312156114b4576114b3611156565b5b600084013567ffffffffffffffff8111156114d2576114d161115b565b5b6114de8682870161144f565b93505060206114ef86828701611486565b925050604061150086828701611486565b9150509250925092565b6000819050919050565b61151d8161150a565b82525050565b60006020820190506115386000830184611514565b92915050565b6115478161129d565b811461155257600080fd5b50565b6000813590506115648161153e565b92915050565b6000602082840312156115805761157f611156565b5b600061158e84828501611555565b91505092915050565b6115a081611227565b82525050565b60006020820190506115bb6000830184611597565b92915050565b600381106115ce57600080fd5b50565b6000813590506115e0816115c1565b92915050565b60008060008060608587031215611600576115ff611156565b5b600061160e878288016115d1565b945050602085013567ffffffffffffffff81111561162f5761162e61115b565b5b61163b878288016112e8565b9350935050604061164e87828801611248565b91505092959194509250565b6000819050919050565b600061167f61167a611675846111c9565b61165a565b6111c9565b9050919050565b600061169182611664565b9050919050565b60006116a382611686565b9050919050565b6116b381611698565b82525050565b60006020820190506116ce60008301846116aa565b92915050565b6000602082840312156116ea576116e9611156565b5b60006116f884828501611212565b91505092915050565b61170a8161150a565b811461171557600080fd5b50565b60008135905061172781611701565b92915050565b60008060006060848603121561174657611745611156565b5b600084013567ffffffffffffffff8111156117645761176361115b565b5b6117708682870161144f565b935050602061178186828701611718565b925050604061179286828701611248565b9150509250925092565b600081519050919050565b60005b838110156117c55780820151818401526020810190506117aa565b60008484015250505050565b60006117dc8261179c565b6117e681856113ac565b93506117f68185602086016117a7565b6117ff816113cc565b840191505092915050565b6000604082019050818103600083015261182481856117d1565b90506118336020830184611597565b9392505050565b61184381611160565b82525050565b600060208201905061185e600083018461183a565b92915050565b61186d816111e9565b82525050565b60006040820190506118886000830185611864565b6118956020830184611597565b9392505050565b600080fd5b600080fd5b600080858511156118ba576118b961189c565b5b838611156118cb576118ca6118a1565b5b6001850283019150848603905094509492505050565b600080604083850312156118f8576118f7611156565b5b600061190685828601611486565b925050602061191785828601611486565b9150509250929050565b600060c082019050818103600083015261193b81896117d1565b905061194a6020830188611597565b61195760408301876112af565b6119646060830186611597565b611971608083018561139d565b61197e60a083018461139d565b979650505050505050565b600060208201905061199e6000830184611864565b92915050565b6000815190506119b381611231565b92915050565b6000602082840312156119cf576119ce611156565b5b60006119dd848285016119a4565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611a536026836119e6565b9150611a5e826119f7565b604082019050919050565b60006020820190508181036000830152611a8281611a46565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611abf6020836119e6565b9150611aca82611a89565b602082019050919050565b60006020820190508181036000830152611aee81611ab2565b9050919050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611b2157611b20611af5565b5b80840192508235915067ffffffffffffffff821115611b4357611b42611afa565b5b602083019250600182023603831315611b5f57611b5e611aff565b5b509250929050565b7f53656e646572206e6f7420456e747279506f696e740000000000000000000000600082015250565b6000611b9d6015836119e6565b9150611ba882611b67565b602082019050919050565b60006020820190508181036000830152611bcc81611b90565b9050919050565b7f6d757374206f7665727269646500000000000000000000000000000000000000600082015250565b6000611c09600d836119e6565b9150611c1482611bd3565b602082019050919050565b60006020820190508181036000830152611c3881611bfc565b9050919050565b7f566572696679696e675061796d61737465723a20696e76616c6964207369676e60008201527f6174757265206c656e67746820696e207061796d6173746572416e6444617461602082015250565b6000611c9b6040836119e6565b9150611ca682611c3f565b604082019050919050565b60006020820190508181036000830152611cca81611c8e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d0b82611227565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d3d57611d3c611cd1565b5b600182019050919050565b600081905092915050565b7f19457468657265756d205369676e6564204d6573736167653a0a333200000000600082015250565b6000611d89601c83611d48565b9150611d9482611d53565b601c82019050919050565b6000819050919050565b611dba611db58261150a565b611d9f565b82525050565b6000611dcb82611d7c565b9150611dd78284611da9565b60208201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000611e4b6018836119e6565b9150611e5682611e15565b602082019050919050565b60006020820190508181036000830152611e7a81611e3e565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000611eb7601f836119e6565b9150611ec282611e81565b602082019050919050565b60006020820190508181036000830152611ee681611eaa565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f496022836119e6565b9150611f5482611eed565b604082019050919050565b60006020820190508181036000830152611f7881611f3c565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202776272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b6000611fdb6022836119e6565b9150611fe682611f7f565b604082019050919050565b6000602082019050818103600083015261200a81611fce565b9050919050565b600060ff82169050919050565b61202781612011565b82525050565b60006080820190506120426000830187611514565b61204f602083018661201e565b61205c6040830185611514565b6120696060830184611514565b9594505050505056fea26469706673582212205de570907547367a53e1532df247185b4768fe79a89c20eb052da1366d066f6564736f6c63430008110033";

type VerifyingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyingPaymaster__factory extends ContractFactory {
  constructor(...args: VerifyingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VerifyingPaymaster> {
    return super.deploy(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    ) as Promise<VerifyingPaymaster>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    );
  }
  override attach(address: string): VerifyingPaymaster {
    return super.attach(address) as VerifyingPaymaster;
  }
  override connect(signer: Signer): VerifyingPaymaster__factory {
    return super.connect(signer) as VerifyingPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyingPaymasterInterface {
    return new utils.Interface(_abi) as VerifyingPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyingPaymaster {
    return new Contract(address, _abi, signerOrProvider) as VerifyingPaymaster;
  }
}
