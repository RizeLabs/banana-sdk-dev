/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  VerifyingSingletonPaymaster,
  VerifyingSingletonPaymasterInterface,
} from "../VerifyingSingletonPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifyingSigner",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "CallerIsNotAnEntryPoint",
    type: "error",
  },
  {
    inputs: [],
    name: "CanNotWithdrawToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "DepositCanNotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "EntryPointCannotBeZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountRequired",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "currentBalance",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sigLength",
        type: "uint256",
      },
    ],
    name: "InvalidPaymasterSignatureLength",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymasterIdCannotBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "VerifyingSignerCannotBeZero",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "_oldValue",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_newValue",
        type: "uint256",
      },
    ],
    name: "EPGasOverheadChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_paymasterId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_charge",
        type: "uint256",
      },
    ],
    name: "GasBalanceDeducted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_paymasterId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "GasDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_paymasterId",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "GasWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_oldSigner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_newSigner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_actor",
        type: "address",
      },
    ],
    name: "VerifyingSignerChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "paymasterId",
        type: "address",
      },
    ],
    name: "depositFor",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "paymasterId",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "paymasterId",
        type: "address",
      },
    ],
    name: "getHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "paymasterIdBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newVerifyingSigner",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "setUnaccountedEPGasOverhead",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyingSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0601f62001a8f38819003918201601f19168301916001600160401b038311848410176200011857808492606094604052833981010312620001135762000047816200012e565b6020820151916001600160a01b0391828416919082850362000113576200007560406200008a93016200012e565b94620000813362000143565b60805262000143565b60018055156200010157811615620000ef5760045561258060025560405161190490816200018b82396080518181816104e2015281816105b70152818161069101528181610747015281816107f401528181610d4e01528181610f4401526111310152f35b604051638fc6a93160e01b8152600490fd5b60405163091748f960e21b8152600490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036200011357565b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6040608081526004908136101561001557600080fd5b600091823560e01c9081630396cb6014610ee75781631f67de8014610e5c578163205c287814610caf57816323d9ac9b14610c5d5781636c19e78314610baa578163715018a614610b0d5781638da5cb5b14610abc578163a40a7ddc14610a6a578163a9a23409146108f4578163aa67c9191461076b578163b0d691fe146106fc57838263bb9fe6bf14610641578263c23a5cea1461055d57508163c399ec8814610469578163d0e30db0146103dd578163deeb387414610375578163f2fde38b1461023b578163f465c77e1461015a575063f8b2cb4f146100f657600080fd5b346101565760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610156578060209273ffffffffffffffffffffffffffffffffffffffff610146610fbc565b1681526003845220549051908152f35b5080fd5b91905034610237576060917ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc90838236011261022f5780359167ffffffffffffffff83116102335761016090833603011261022f576101c5916101bb61111a565b60443591016113d4565b8291925194859383855280518094860152815b8481106102185750508383018501526020830152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168101030190f35b6020828201810151898301890152889650016101d8565b8480fd5b8580fd5b8280fd5b9050346102375760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023757610274610fbc565b9061027d610fdf565b73ffffffffffffffffffffffffffffffffffffffff8092169283156102f2575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8390346101565760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015657356103af610fdf565b600254816002557f0b2f957fc0a9306310238ef9a212935360e98fe3f8bc525f4cb69d38b1efa8598380a380f35b905082807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104665750602060649251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601760248201527f75736572204465706f736974466f7220696e73746561640000000000000000006044820152fd5b80fd5b9190503461023757827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610237578051917f70a08231000000000000000000000000000000000000000000000000000000008352309083015260208260248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa91821561055357839261051c575b6020838351908152f35b9091506020813d821161054b575b81610537602093836110d9565b810103126102375760209250519038610512565b3d915061052a565b81513d85823e3d90fd5b8091843461063d5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261063d57610597610fbc565b61059f610fdf565b73ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803b1561023357859283602492865197889586947fc23a5cea00000000000000000000000000000000000000000000000000000000865216908401525af190811561063457506106245750f35b61062d9061105e565b6104665780f35b513d84823e3d90fd5b5050fd5b8091843461063d57827ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261063d5761067a610fdf565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001691823b156106f757839283918351809581937fbb9fe6bf0000000000000000000000000000000000000000000000000000000083525af190811561063457506106245750f35b505050fd5b50503461015657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610156576020905173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b905060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102375761079f610fbc565b916107a86111c5565b73ffffffffffffffffffffffffffffffffffffffff8093169283156108cd5734156108a6579084929184845260036020526107e63483862054611189565b8585526003602052828520557f00000000000000000000000000000000000000000000000000000000000000001691823b156108a257839060248351809581937fb760faf9000000000000000000000000000000000000000000000000000000008352309083015234905af1908115610634575061088e575b505034907f1dbbf474736d6415d6a265fabee708fe6e988f6fd0c9d870ded36cab380898dd8380a36001805580f35b6108979061105e565b61015657813861085f565b8380fd5b50517f674c2ee2000000000000000000000000000000000000000000000000000000008152fd5b50517fab9a38ca000000000000000000000000000000000000000000000000000000008152fd5b9050346102375760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610237576003813510156102375767ffffffffffffffff60243581811161022f573660238201121561022f578083013591821161022f57366024838301011161022f5761097a9161097061111a565b6024369201611292565b908360208451610989816110a1565b828152015282828051810103126108a25760208201519173ffffffffffffffffffffffffffffffffffffffff831680930361022f578301519081602085516109d0816110a1565b8581520152600254828102928184041490151715610a3e57506109f590604435611189565b918184526003602052610a0b8382862054611234565b9082855260036020528420557f5dc1c754041954fe976773fa441397a7928c7127a1c83904214a7d25633990078380a380f35b8460116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5050346101565760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610156578060209273ffffffffffffffffffffffffffffffffffffffff610146610fbc565b50503461015657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101565773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b833461046657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261046657610b44610fdf565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b91905060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023757610bdf610fbc565b610be7610fdf565b73ffffffffffffffffffffffffffffffffffffffff808216928315610c355750835416925533917fe1f62c0e6d7bb6d470828565415bf2e87dbfea50e52d2d753788b529bd0c6d628480a480f35b8490517f8fc6a931000000000000000000000000000000000000000000000000000000008152fd5b82843461046657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610466575073ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b90503461023757817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261023757610ce7610fbc565b9060243592610cf46111c5565b73ffffffffffffffffffffffffffffffffffffffff809316928315610e3557338652600360205281862054808611610e005750908592913384526003602052610d408683862054611234565b3385526003602052828520557f00000000000000000000000000000000000000000000000000000000000000001691823b156108a257846044859283855196879485937f205c28780000000000000000000000000000000000000000000000000000000085528401528a60248401525af19081156106345750610dec575b5050337f926a144b6fffc1d73f115b81af7ec66a7c12aed0ff73197c39a683753fc1d9258480a46001805580f35b610df59061105e565b610237578238610dbe565b83604491878551927fcf4791810000000000000000000000000000000000000000000000000000000084528301526024820152fd5b50517f92bc9df3000000000000000000000000000000000000000000000000000000008152fd5b905034610237577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc9282843601126104665781359367ffffffffffffffff851161015657610160908536030112610466575060243573ffffffffffffffffffffffffffffffffffffffff81168103610ee257602093610edb92016112f7565b9051908152f35b600080fd5b91905060207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102375782823563ffffffff811680910361015657610f2d610fdf565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001693843b1561023757602490845195869384927f0396cb6000000000000000000000000000000000000000000000000000000000845283015234905af19081156106345750610fb0575080f35b610fb99061105e565b80f35b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610ee257565b73ffffffffffffffffffffffffffffffffffffffff60005416330361100057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff811161107257604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761107257604052565b6060810190811067ffffffffffffffff82111761107257604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761107257604052565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016330361115957565b60246040517fbb587b6e000000000000000000000000000000000000000000000000000000008152336004820152fd5b9190820180921161119657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6002600154146111d6576002600155565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b9190820391821161119657565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610ee2570180359067ffffffffffffffff8211610ee257602001918136038313610ee257565b92919267ffffffffffffffff821161107257604051916112da60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601846110d9565b829481845281830111610ee2578281602093846000960137010152565b61130e6113076040830183611241565b3691611292565b60208151910120916113266113076060840184611241565b602081519101209260405192602084019473ffffffffffffffffffffffffffffffffffffffff928383351687526020830135604087015260608601526080850152608081013560a085015260a081013560c085015260c081013560e08501526101009060e0810135828601520135610120840152466101408401523061016084015261018091168183015281526101a0810181811067ffffffffffffffff8211176110725760405251902090565b91909160408051916113e5836110bd565b60009485845285836020956060878201520152611406610120830183611241565b8060149492941161163457830191847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec85850301126116345760148401359373ffffffffffffffffffffffffffffffffffffffff9384861680960361163057603482013567ffffffffffffffff9283821161162c5701908060338301121561162857816034601461149a9401359101611292565b8051906114c18851976114ac896110bd565b8089528a8901928352898901938452866112f7565b9151604181036115f8575061152861152087928360045416948b518d8101917f19457468657265756d205369676e6564204d6573736167653a0a3332000000008352603c820152603c8152611515816110bd565b5190209051906117fa565b919091611661565b16036115a9575082845116885260038652848820548111611569575061154d90611638565b915116825193840152818301528152611565816110bd565b9190565b60449085808a86885116815220549051917fcf47918100000000000000000000000000000000000000000000000000000000835260048301526024820152fd5b8551979896880195945085118786101792506115cb9150505752815290600190565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b6024908951907fe4b52b170000000000000000000000000000000000000000000000000000000082526004820152fd5b8a80fd5b8b80fd5b8980fd5b8780fd5b61010060e082013591013580821461165d57480180821015611658575090565b905090565b5090565b60058110156117cb57806116725750565b600181036116d85760646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152fd5b6002810361173e5760646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152fd5b60031461174757565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f75650000000000000000000000000000000000000000000000000000000000006064820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b90604181511460001461182857611824916020820151906060604084015193015160001a90611832565b9091565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116118c25791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156118b557815173ffffffffffffffffffffffffffffffffffffffff8116156118af579190565b50600190565b50604051903d90823e3d90fd5b5050505060009060039056fea2646970667358221220bac22bd69a8d650cf466ddaf096aec4a352cef2ab7bb7bd8f9b30571cc6edb1264736f6c63430008110033";

type VerifyingSingletonPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VerifyingSingletonPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VerifyingSingletonPaymaster__factory extends ContractFactory {
  constructor(...args: VerifyingSingletonPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<VerifyingSingletonPaymaster> {
    return super.deploy(
      _owner,
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    ) as Promise<VerifyingSingletonPaymaster>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    _verifyingSigner: PromiseOrValue<string>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _entryPoint,
      _verifyingSigner,
      overrides || {}
    );
  }
  override attach(address: string): VerifyingSingletonPaymaster {
    return super.attach(address) as VerifyingSingletonPaymaster;
  }
  override connect(signer: Signer): VerifyingSingletonPaymaster__factory {
    return super.connect(signer) as VerifyingSingletonPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VerifyingSingletonPaymasterInterface {
    return new utils.Interface(_abi) as VerifyingSingletonPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VerifyingSingletonPaymaster {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VerifyingSingletonPaymaster;
  }
}
